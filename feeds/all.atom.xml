<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shangfute's Blog</title><link href="http://shangfute.github.com/" rel="alternate"></link><link href="http://shangfute.github.com/feeds/all.atom.xml" rel="self"></link><id>http://shangfute.github.com/</id><updated>2016-05-24T22:57:17+08:00</updated><entry><title>我的时间管理方案</title><link href="http://shangfute.github.com/time-managemnet.html" rel="alternate"></link><published>2016-05-24T22:57:17+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-24:time-managemnet.html</id><summary type="html">&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</summary><category term="GTD"></category><category term="time"></category></entry><entry><title>并发与并行</title><link href="http://shangfute.github.com/concurrency-parallization.html" rel="alternate"></link><published>2016-05-23T23:17:23+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-23:concurrency-parallization.html</id><summary type="html">&lt;p&gt;目前，计算机几乎无法离开并行计算的能力，同时编程中还有一个并发的概念。并发与并行看起来都是同时做某事，但实际上存在区别。&lt;/p&gt;
&lt;p&gt;并发指能够同时应对多个任务。并行指同时做多个任务的能力。区别在于一个是“应对”，一个是“做”。“应对”针对问题定义层面，“做”针对解决方法层面。比如，我们可以边看电视边烧饭，同时面临两个任务，是并发。同样可以再请别人帮忙一起做饭，同时解决问题，是并行。&lt;/p&gt;
&lt;p&gt;因此，并发不一定并行解决，并行同样不一定针对并发问题。并发任务在解决时可以按顺序逐一解决，当然也可以同时解决。并行也可以解决非并发的问题，提高计算效率。不过并行能够起作用一定是针对的问题可以转化为并发问题。&lt;/p&gt;</summary><category term="parallization"></category><category term="cocurrency"></category></entry><entry><title>[Encrypted] Tangled Thoughts</title><link href="http://shangfute.github.com/tangled-thoughts.html" rel="alternate"></link><published>2016-05-22T22:20:39+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-22:tangled-thoughts.html</id><summary type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;oyz37OX7W/PBYanoHqGrhg==;i8hevscCz6jltbpPY8AN5QWjJi83Bej8nhv2EMxTHDo2LQJrtB0koldNb8zDizjFaE5Cmg1zr9zw/7ZnkOkXFdgN6d91Wjp1rmO5SoV2SIAJBQ+LjgFNeJk4a8RkLPW/hEc4zrXXABBUViLAmLqyIeJIy66cEGINIJsofYgUsl3d+7TZpou5KHNBLpQTIRqquENcwWAUkD/GrP7Kddh3heS4IGFyBl0SgrNnT+dPbbdAbVEKcZZ1+iJNfRQ0TDBqBnTAot+A6HxFwIBrb5pQzTi7yePyVaP4HIBdEirovnaxDzxmqlyVx1dvII/kobBOHYFEtA1A+5l/sdgzXAAMfQVcSpiO8w0cSpfOKWyP6cYkMY7XRx8m0kRnlSLN95lrrFuq0Ry2zyJy94xeG/q61PNvShQTYEstxDCrzrKpB/D3XAt9HmZ3jHlNBFupe3XjeOV/52B4Y07NPEyCT2mT5bfyyyrjICcMjfSD8SusNCxQ/anrtKrhcR2keww6w/KNsNCGs0pjgq1oQlKSAhxtNu4C0i5TAGXVxfkhiWy4L89X1v3knnKM/25ZH3ew+HLlI1ltKfaCSHHBV8Ks2R4nJHYXTLfQQPs1TnGvXg+NP18ViC/0piGFZWnYsvWDzALv/wPbLpOknE42v2hwch137SazW8oIhtpZ/0wauej7cWd4k2bNaiXGA9USjL3CMx8agMMS5y/BPtMUqTjK2MiPqy82kdmnBkyM93gYuxSxEVnAs3rh9LrpWFup+P7OTCYBtbIsl/LLgJkP2G2MVLAwgtxAyShja8qw7+sJv0Fhligm9YJNiNp07CjxiIAPctbak7z2E12xO0ALM+Cu+CR7R2DmhlYEDQRmnES5UrS6Wr6S/hkrRrNGiHfzilJcG/p7a1JSkdRwHwqTGfSkckWJhECCFSeJxqfgdoBYabfrQ2E7jsUfuft5pGoMDApLo2ZJMOzPwt3FrTk1UfbhpH86VU0SQJk7StCpbB8LubXiqF3a25kTYrPP9NW+Dq+eqIuEFEhGZszGoA5iGrZVcZ2LRn+qAvWHrueuPrcQb/6Lfhkew3JR40wsbScujh3+VVr/VpnfngRS/GN0LZMm119PWZp3xrSiCHzqaxzsQ42fyAYgd6JBvBURyl9SVG0iEOweElMbi5JldeS1aEBYbDnoGzHTGD6WwSu3+YbgDOt8Hft1wmVnxyWhgFKEydi7RCGbXQN8h2f7P3I2qq4ioLSxlxcrtMdyqtbnaZYE5018Ws1doUH8yfmqZmHvE6oCKToVh1mS8ocOSD06gbMzygamsQDYUnb0HEOlnzpfRmKCnlj9JQjDY1Z0d8jATemKsFvxJqdC2DlUxROdTnq/I/ZGggo71yL1jkNdPNCZKmk0VL4ZRkabiKDB7FmrvuM13Eo6bkBz4qQUlW/XIFsJwuTWNxk92uIUoqoaOGMPwCQYhVk=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</summary></entry><entry><title>百鸟朝凤</title><link href="http://shangfute.github.com/phoenix-song.html" rel="alternate"></link><published>2016-05-21T21:58:27+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-21:phoenix-song.html</id><summary type="html">&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</summary><category term="movie"></category></entry><entry><title>蓝牙共享网络</title><link href="http://shangfute.github.com/bluetooth-network.html" rel="alternate"></link><published>2016-05-20T13:51:55+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-20:bluetooth-network.html</id><summary type="html">&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</summary><category term="skill"></category><category term="bluetooth"></category></entry><entry><title></title><link href="http://shangfute.github.com/best-coder-ctf.html" rel="alternate"></link><published>2016-05-19T11:01:49+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-19:best-coder-ctf.html</id><summary type="html">&lt;p&gt;之前耀哥问我要不要参加百度之星编程竞赛，其实有一点要参加的想法。但是一方面感觉自己水平太差，那不了什么名次；另一方面还想着时间不够，我其实更想参加CTF。&lt;/p&gt;
&lt;p&gt;其实现在各种竞赛这么多，还有Kaggle、天池什么的都很诱人。但是毕竟人的精力是有限的。我现在希望能够首先集中精力到CTF中。&lt;/p&gt;
&lt;p&gt;想到这里，发现其实我同样没有参加多少CTF，那么何谈精力有限呢。那么我很少参加编程竞赛和很少参加CTF的原因是否其实一样呢。&lt;/p&gt;
&lt;p&gt;那么做个实验吧，下周我要尝试参加所有能够参加的CTF。如果做到了，那么坚持参加CTF。如果没有做到说明，我不能参加竞赛另有原因。我应当尝试找出更深入的原因。&lt;/p&gt;
&lt;p&gt;captf.com&lt;/p&gt;</summary><category term="game"></category><category term="learn"></category></entry><entry><title>互联网发展太快了，是时候给它加把锁了</title><link href="http://shangfute.github.com/internet-lock.html" rel="alternate"></link><published>2016-05-18T23:01:00+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-18:internet-lock.html</id><summary type="html">&lt;p&gt;互联网现在真正的改变了人们的生活，其中一项就是我们的隐私。如果将公交卡和银行卡绑定，元数据的关联几乎就可以确定一个人去了那里，干了什么，进而重构出一个人完整的生活轨迹。有人认为在互联网时代，我们不需要隐私，一切都开诚布公。同样有人竭力去保护隐私，甚至拒绝使用智能手机。&lt;/p&gt;
&lt;p&gt;这让我想起《三体》：三体人之间通过意识交流，不会产生任何谎言。这看起来是不错的天赋，但是他们大概就没有隐私了吧。假设互联网的发展能够使得人类同样达到三体人的状态，所有人完全成为一个共同体，那么人的思想就会同质化。其实正是隐私——人们之间不同又保密的那部分——构造了我们多元的社会。在我们的社会中会存在冲突，但是这样的社会才是有活力的社会，有创造力的社会。&lt;/p&gt;
&lt;p&gt;但实际上隐私的概念又十分微妙。只要上网必然要向网络提供自己的信息，才能获得相应的服务。因此，现在的手机应用的授权管理让人难以理解。比如一个应用需要你授权它调用GPS，但是我不希望泄漏我的位置信息，所以我选不授权，应用退出。应用为什么不可以保持位置未知的情况下提供服务呢？另一方面，我告诉了应用我的位置，我希望它合理使用，不要再用作它途。但是数据已经上传到服务器上了，应用想怎么用，我就没法控制了。我希望即使数据离开我的计算机，仍然只有授权的计算可以在我的数据上运行。&lt;/p&gt;
&lt;p&gt;其实现在已经有人实现了保密搜索功能：提供给搜索引擎的关键字是加密的，搜索引擎在不知道搜索内容的情况下，同样能够得到正确结果。这就很好的保护了用户的隐私，因为我们都知道通过关键字几乎就可以知道你感兴趣的内容是什么。通常你搜索了某款汽车，就会不断向你推送汽车广告，因为搜索引擎记录了你的所有搜索行为。但我并不想让别人知道我想买车啊，那么就需要使用保密搜索。&lt;/p&gt;
&lt;p&gt;那么我们可以猜测随着人们保密意识的增强，类似的服务会越来越广泛的使用。就像现在的端到端加密一样，成为互联网的主流。虽然现在的技术条件还不够成熟，但是互联网发展太快了，是时候加把锁了。&lt;/p&gt;</summary><category term="internet"></category><category term="privacy"></category></entry><entry><title>攻击者模型</title><link href="http://shangfute.github.com/rational-concept.html" rel="alternate"></link><published>2016-05-17T22:51:22+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-17:rational-concept.html</id><summary type="html">&lt;p&gt;在安全协议中经典的攻击者模型有半诚实模型、恶意模型。半诚实的攻击者完全遵照游戏准则，但总是尝试打破既定的安全目标，就好像伪君子。恶意攻击者完全不管协议的规定，同样总是尝试打破既定的安全目标，就好像真小人。&lt;/p&gt;
&lt;p&gt;但实际中更可能的情况是攻击者是理性的人，会按照效益来决定是否打破规则。如果惩罚严厉的话，就不会选择打破规则。完全防御恶意攻击者十分困难，需要消耗很高的代价，但是如果防御理性攻击者，就不需要很高的代价了。这时候密码学就难以解决了，需要引入博弈论的方法。&lt;/p&gt;
&lt;p&gt;如果要提高效率的话，通常的情况是发现那些事情其实不是必须做的，只做必要的事情就好了。在安全计算协议中，混淆电路和不经意传输花费比较大。如果有些计算不需要保密的话，可以不进行混淆。将每条要执行的语句按照保密的程度进行分类，只对保密的计算使用混淆电路。同样如果数据有不经意访问性，也可以省略不经意传输的花销。这要比普通的方案有效得多。&lt;/p&gt;</summary><category term="attack model"></category><category term="game theory"></category></entry><entry><title>非凡的推断</title><link href="http://shangfute.github.com/non-trivil-reduction.html" rel="alternate"></link><published>2016-05-16T23:05:31+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-16:non-trivil-reduction.html</id><summary type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</summary><category term="chess"></category><category term="character"></category></entry><entry><title>形式化协议分析方法</title><link href="http://shangfute.github.com/protocol-analysis.html" rel="alternate"></link><published>2016-05-15T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-15:protocol-analysis.html</id><summary type="html">&lt;p&gt;今天从CS259学习到一个关于协议分析的学习方法，我取名叫演变法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到一个安全协议的描述文档，例如RFC。&lt;/li&gt;
&lt;li&gt;根据描述，忽略一些协议细节，抽取协议的基本构造。&lt;/li&gt;
&lt;li&gt;将构造形式化。&lt;/li&gt;
&lt;li&gt;分析形式化协议，发现协议漏洞。&lt;/li&gt;
&lt;li&gt;对比描述文档，分析完整协议如何解决该漏洞的。&lt;/li&gt;
&lt;li&gt;打补丁后，重复第3步。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如此从原始构造，演变到最后版本的协议，能够深刻理解协议中的细节描述，分别都是为了解决什么问题的。&lt;/p&gt;
&lt;p&gt;这个方法同样适用于软件的安全性分析。&lt;/p&gt;</summary><category term="formal method"></category><category term="protocol analysis"></category><category term="learn"></category></entry><entry><title>英语学习</title><link href="http://shangfute.github.com/learn-english.html" rel="alternate"></link><published>2016-05-14T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-14:learn-english.html</id><summary type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</summary><category term="english"></category><category term="daily"></category><category term="learn"></category></entry><entry><title>Have Fun With Cryptography</title><link href="http://shangfute.github.com/practice-encrypt.html" rel="alternate"></link><published>2016-05-13T22:11:03+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-13:practice-encrypt.html</id><summary type="html">&lt;p&gt;今天刚刚在 github 上创建了主页，一共才三篇文章，就有一篇是加密的，遭到朋友们的抱怨。其实文章仅仅是一些没有整理好的思想罢了，但是为了测试一下加密功能，因此才加密了一下。另外，这个网站的主题就是密码学，因此我十分乐意让这个主题更突出一些。&lt;/p&gt;
&lt;p&gt;密码学太有用了，我不想只从理论研究的角度学习密码学，更想将其应用到实践中去。我希望能够实现下面的应用。&lt;/p&gt;
&lt;h2&gt;安全的评论&lt;/h2&gt;
&lt;p&gt;相信本文读者都在使用各种各样的网络应用，这些网络应用大多存在于云服务器上，客户端通常就是一个浏览器。大公司还可以构建自己的云，但许多小型组织和个人还是在租用公有云，因此数据存储在别人的计算机上。比如，大家使用淘宝时，交易记录都是存储在淘宝服务器上的，你可以查找之前在淘宝上买过的所以东西。这样做有很多好处，但同样难以保证这些数据的完整性，不被恶意修改。另一方面，难以保证这些数据不被用作它途，被恶意数据挖掘等等。&lt;/p&gt;
&lt;p&gt;比如文章评论功能可以自己实现，也可以将该项工作外包给别人。本站点的评论功能使用了多说的社会化评论服务，评论的数据以明文的形式存储在多说的服务器上。每次访问网站时，浏览器向多说的服务器发送请求，获得评论。因此难以确保这些外包的数据有没有被修改。这时候评论数据不需要保密，但是应当保证不被修改。&lt;/p&gt;
&lt;p&gt;一项工作有多少实际价值，就看它能帮助什么人，解决什么问题。帮助的人越多，解决的问题越普遍，越重要，价值越大。这个问题可以推广为如何保证外包数据的完整性。做为一个密码学狗，马上想到构造恰当的密码学协议来解决这个问题。当然可能还有其他解决方法，不要将自己局限与特定领域，应当使用所有可能知识来解决。比如，我可以和多说签订合同，如果对方违约没有保护好数据，就应当赔我多少钱。但对我来说，这种方法显然有些困难。最后我会选取能够想到的最简单的方法来解决这个问题。&lt;/p&gt;
&lt;p&gt;密码学从根本上讲，或许就是一种通过数学方法来解决信任问题的学问。密码学想要将对某个人或组织的信任，等价为对某种数学问题的难解性的信任。如果你相信数学，那么你也应当相信大家可以共同完成某个任务。&lt;/p&gt;</summary><category term="web"></category><category term="crypto"></category><category term="cloud"></category></entry><entry><title>[Encrypted] Think Flow</title><link href="http://shangfute.github.com/think-flow.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:think-flow.html</id><summary type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;aK0RPUJwDu8irHqNWkRonw==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</summary><category term="thoughts"></category></entry><entry><title>第一篇文章</title><link href="http://shangfute.github.com/di-yi-pian-wen-zhang.html" rel="alternate"></link><published>2016-05-12T13:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:di-yi-pian-wen-zhang.html</id><summary type="html">&lt;h2&gt;记录博客搭建过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pelican安装&lt;/li&gt;
&lt;li&gt;github pages&lt;/li&gt;
&lt;li&gt;pelican 插件&lt;/li&gt;
&lt;li&gt;select themes&lt;ul&gt;
&lt;li&gt;bootstrap2-dark&lt;/li&gt;
&lt;li&gt;aboutwilson&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加评论功能 Duoshuo&lt;/li&gt;
&lt;li&gt;站点图 sitemap&lt;/li&gt;
&lt;li&gt;RSS订阅&lt;/li&gt;
&lt;li&gt;文章加密&lt;/li&gt;
&lt;li&gt;日常写作流程&lt;/li&gt;
&lt;li&gt;图床&lt;/li&gt;
&lt;li&gt;代码高亮显示&lt;/li&gt;
&lt;li&gt;公式 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelican_plugins&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;尚福特&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;Shangfute&amp;#39;s Blog&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Cryptography &amp;amp; Program Anaylsis&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://localhost:8000&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;zh-cmn-Hans&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.rss.xml&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Freebuf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://freebuf.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ltyleader&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://litengyao.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;shangfute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;mailto://shangfute@163.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c"&gt;# RELATIVE_URLS = True&lt;/span&gt;

&lt;span class="n"&gt;JINJA_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;jinja2.ext.ExprStmtExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/shangfute&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;priorities&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;changefreqs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;ENCRYPT_CONTENT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;title_prefix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;[Encrypted]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;summary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;This content is encrypted.&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;E:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;workspace&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;blog&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;pelican-themes&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;aboutwilson&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# from pelican-plugins&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="math"&gt;\(Enc_k\)&lt;/span&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="write"></category><category term="think"></category></entry></feed>