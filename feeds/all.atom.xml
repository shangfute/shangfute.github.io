<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shangfute's Blog</title><link href="http://shangfute.github.com/" rel="alternate"></link><link href="http://shangfute.github.com/feeds/all.atom.xml" rel="self"></link><id>http://shangfute.github.com/</id><updated>2016-05-15T15:37:57+08:00</updated><entry><title>形式化协议分析方法</title><link href="http://shangfute.github.com/protocol-analysis.html" rel="alternate"></link><published>2016-05-15T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-15:protocol-analysis.html</id><summary type="html">&lt;p&gt;今天从CS259学习到一个关于协议分析的学习方法，我取名叫演变法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到一个安全协议的描述文档，例如RFC。&lt;/li&gt;
&lt;li&gt;根据描述，忽略一些协议细节，抽取协议的基本构造。&lt;/li&gt;
&lt;li&gt;将构造形式化。&lt;/li&gt;
&lt;li&gt;分析形式化协议，发现协议漏洞。&lt;/li&gt;
&lt;li&gt;对比描述文档，分析完整协议如何解决该漏洞的。&lt;/li&gt;
&lt;li&gt;打补丁后，重复第3步。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如此从原始构造，演变到最后版本的协议，能够深刻理解协议中的细节描述，分别都是为了解决什么问题的。&lt;/p&gt;
&lt;p&gt;这个方法同样适用于软件的安全性分析。&lt;/p&gt;</summary><category term="formal method"></category><category term="protocol analysis"></category><category term="learn"></category></entry><entry><title>英语学习</title><link href="http://shangfute.github.com/learn-english.html" rel="alternate"></link><published>2016-05-14T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-14:learn-english.html</id><summary type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</summary><category term="english"></category><category term="daily"></category><category term="learn"></category></entry><entry><title>Have Fun With Cryptography</title><link href="http://shangfute.github.com/why-encrypt.html" rel="alternate"></link><published>2016-05-13T22:11:03+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-13:why-encrypt.html</id><summary type="html">&lt;p&gt;今天刚刚在 github 上创建了主页，一共才三篇文章，就有一篇是加密的，遭到朋友们的抱怨。其实文章仅仅是一些没有整理好的思想罢了，但是为了测试一下加密功能，因此才加密了一下。另外，这个网站的主题就是密码学，因此我十分乐意让这个主题更突出一些。&lt;/p&gt;
&lt;p&gt;密码学太有用了，我不想只从理论研究的角度学习密码学，更想将其应用到实践中去。我希望能够实现下面的应用。&lt;/p&gt;
&lt;h2&gt;安全的评论&lt;/h2&gt;
&lt;p&gt;相信本文读者都在使用各种各样的网络应用，这些网络应用大多存在于云服务器上，客户端通常就是一个浏览器。大公司还可以构建自己的云，但许多小型组织和个人还是在租用公有云，因此数据存储在别人的计算机上。比如，大家使用淘宝时，交易记录都是存储在淘宝服务器上的，你可以查找之前在淘宝上买过的所以东西。这样做有很多好处，但同样难以保证这些数据的完整性，不被恶意修改。另一方面，难以保证这些数据不被用作它途，被恶意数据挖掘等等。&lt;/p&gt;
&lt;p&gt;比如文章评论功能可以自己实现，也可以将该项工作外包给别人。本站点的评论功能使用了多说的社会化评论服务，评论的数据以明文的形式存储在多说的服务器上。每次访问网站时，浏览器向多说的服务器发送请求，获得评论。因此难以确保这些外包的数据有没有被修改。这时候评论数据不需要保密，但是应当保证不被修改。&lt;/p&gt;
&lt;p&gt;一项工作有多少实际价值，就看它能帮助什么人，解决什么问题。帮助的人越多，解决的问题越普遍，越重要，价值越大。这个问题可以推广为如何保证外包数据的完整性。做为一个密码学狗，马上想到构造恰当的密码学协议来解决这个问题。当然可能还有其他解决方法，不要将自己局限与特定领域，应当使用所有可能知识来解决。比如，我可以和多说签订合同，如果对方违约没有保护好数据，就应当赔我多少钱。但对我来说，这种方法显然有些困难。最后我会选取能够想到的最简单的方法来解决这个问题。&lt;/p&gt;
&lt;p&gt;密码学从根本上讲，或许就是一种通过数学方法来解决信任问题的学问。密码学想要将对某个人或组织的信任，等价为对某种数学问题的难解性的信任。如果你相信数学，那么你也应当相信大家可以共同完成某个任务。&lt;/p&gt;</summary><category term="web"></category><category term="crypto"></category><category term="cloud"></category></entry><entry><title>[Encrypted] Think flow</title><link href="http://shangfute.github.com/think-flow.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:think-flow.html</id><summary type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;3XuFzHPomEInBYXiReP7Ig==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</summary><category term="thoughts"></category></entry><entry><title>第一篇文章</title><link href="http://shangfute.github.com/di-yi-pian-wen-zhang.html" rel="alternate"></link><published>2016-05-12T13:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:di-yi-pian-wen-zhang.html</id><summary type="html">&lt;h2&gt;记录博客搭建过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pelican安装&lt;/li&gt;
&lt;li&gt;github pages&lt;/li&gt;
&lt;li&gt;pelican 插件&lt;/li&gt;
&lt;li&gt;select themes&lt;ul&gt;
&lt;li&gt;bootstrap2-dark&lt;/li&gt;
&lt;li&gt;aboutwilson&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加评论功能 Duoshuo&lt;/li&gt;
&lt;li&gt;站点图 sitemap&lt;/li&gt;
&lt;li&gt;RSS订阅&lt;/li&gt;
&lt;li&gt;文章加密&lt;/li&gt;
&lt;li&gt;日常写作流程&lt;/li&gt;
&lt;li&gt;图床&lt;/li&gt;
&lt;li&gt;代码高亮显示&lt;/li&gt;
&lt;li&gt;公式 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelican_plugins&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;尚福特&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;Shangfute&amp;#39;s Blog&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Cryptography &amp;amp; Program Anaylsis&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://localhost:8000&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;zh-cmn-Hans&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.rss.xml&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Freebuf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://freebuf.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ltyleader&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://litengyao.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;shangfute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;mailto://shangfute@163.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c"&gt;# RELATIVE_URLS = True&lt;/span&gt;

&lt;span class="n"&gt;JINJA_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;jinja2.ext.ExprStmtExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/shangfute&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;priorities&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;changefreqs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;ENCRYPT_CONTENT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;title_prefix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;[Encrypted]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;summary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;This content is encrypted.&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;E:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;workspace&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;blog&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;pelican-themes&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;aboutwilson&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# from pelican-plugins&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="math"&gt;\(Enc_k\)&lt;/span&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="write"></category><category term="think"></category></entry></feed>