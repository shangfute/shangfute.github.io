<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shangfute's Blog</title><link href="http://shangfute.github.com/" rel="alternate"></link><link href="http://shangfute.github.com/feeds/life.atom.xml" rel="self"></link><id>http://shangfute.github.com/</id><updated>2016-05-16T23:05:31+08:00</updated><entry><title>非凡的推断</title><link href="http://shangfute.github.com/non-trivil-reduction.html" rel="alternate"></link><published>2016-05-16T23:05:31+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-16:non-trivil-reduction.html</id><summary type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</summary><category term="chess"></category><category term="character"></category></entry><entry><title>英语学习</title><link href="http://shangfute.github.com/learn-english.html" rel="alternate"></link><published>2016-05-14T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-14:learn-english.html</id><summary type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</summary><category term="english"></category><category term="daily"></category><category term="learn"></category></entry><entry><title>[Encrypted] Think flow</title><link href="http://shangfute.github.com/think-flow.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:think-flow.html</id><summary type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;sYwPdbPO2qicFshW3+2Srw==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</summary><category term="thoughts"></category></entry></feed>