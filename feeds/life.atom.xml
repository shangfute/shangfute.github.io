<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shangfute's Blog - life</title><link href="http://shangfute.github.com/" rel="alternate"></link><link href="http://shangfute.github.com/feeds/life.atom.xml" rel="self"></link><id>http://shangfute.github.com/</id><updated>2017-02-17T08:52:07+08:00</updated><entry><title>新学期计划</title><link href="http://shangfute.github.com/first-term-plan.html" rel="alternate"></link><published>2017-02-17T08:52:07+08:00</published><updated>2017-02-17T08:52:07+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2017-02-17:/first-term-plan.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;找研究方向&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读大量文章，回答下面问题：&lt;/p&gt;
&lt;p&gt;目前都有哪些研究团体在做CPS安全？&lt;/p&gt;
&lt;p&gt;他们都在做什么问题，哪些更有意义？尽可能多读，不只论文。&lt;/p&gt;
&lt;p&gt;哪些问题是刚出现的，没有很好的解决方案？或者解决方案较少的问题？&lt;/p&gt;
&lt;p&gt;还有没有什么我可以做的，如何从新的角度探索这个问题？&lt;/p&gt;
&lt;p&gt;利用自己的优势：编程？理论？算法？机器学习？&lt;/p&gt;
&lt;p&gt;每次看论文时，考虑如果我来做这个问题，我会怎么做？&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;找研究方向&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读大量文章，回答下面问题：&lt;/p&gt;
&lt;p&gt;目前都有哪些研究团体在做CPS安全？&lt;/p&gt;
&lt;p&gt;他们都在做什么问题，哪些更有意义？尽可能多读，不只论文。&lt;/p&gt;
&lt;p&gt;哪些问题是刚出现的，没有很好的解决方案？或者解决方案较少的问题？&lt;/p&gt;
&lt;p&gt;还有没有什么我可以做的，如何从新的角度探索这个问题？&lt;/p&gt;
&lt;p&gt;利用自己的优势：编程？理论？算法？机器学习？&lt;/p&gt;
&lt;p&gt;每次看论文时，考虑如果我来做这个问题，我会怎么做？&lt;/p&gt;</content><category term="plan"></category></entry><entry><title>我的时间管理方案</title><link href="http://shangfute.github.com/time-managemnet.html" rel="alternate"></link><published>2016-05-24T22:57:17+08:00</published><updated>2016-05-24T22:57:17+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-24:/time-managemnet.html</id><summary type="html">&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</summary><content type="html">&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</content><category term="GTD"></category><category term="time"></category></entry><entry><title>[Encrypted] Tangled Thoughts</title><link href="http://shangfute.github.com/tangled-thoughts.html" rel="alternate"></link><published>2016-05-22T22:20:39+08:00</published><updated>2016-05-22T22:20:39+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-22:/tangled-thoughts.html</id><summary type="html"></summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;5yiMktWCKT6L9E7ouwe1XQ==;1a+JIDMVIMwcyymHjjoEBkCvQAKvp6oS5q1tEFFXvU3pG05c7fcGGbrKdHjej8Hwyvbu2Pldws3pyKred/RG7vonnMLGEyI4GuAYZgujVMCV0KAugtcq5T1Cy7Q0B7DUQcV0zrFmF1CGSKyKEKjS5A/E07SoCeCwW6WVxkR02h9k/Wgb6PkUiQuJy+M2PZz1B8x1zeudpJcQzUrnJobL8IA/hNjY98IJ1uglTULjO8J7dC4Fm7HActptqfwUHmBVS85NfP6BjbMw2aAmDeg5RyA9rcbMGsutu0/QLQYFW1B2M+01PhD6neTqLMczAuOX5Ihc5vDwHDRyM7L060qz/X5rDFRG6080z+Tgnt6i8cO/7GYB0hL5g0StlL07o9vGJ2jrgQMar1iXgs/aqHZn+HjRbLOgGvyWqayuzyHjKhTXDnaMK6kdsOxyQI/6Pv+PC5b6MaM2ywCTCZEdgSd05qk3rHuRFHpUkeT3LeWzovKxTWVFAlq6fXhhg5SFrSq9vUzKhWpld3MtYtm/wjaIl1EirxcSsY0QtpST0HO7XBJtuONaqArKPVQKUkQxG6ugZjZfvPD8X4G/cqiXtueLuepq5cpqcGD9BxIsdjJ/0Rmr1Gf5bE31GonLgH0sCjcM25DIhqBGcle3OhVyTecEBp+VZ21peG1dR8Xach1zoNuQhbjmCKCcPONwOIyPdVXPz/o3YfUA1ldOAoQVD+vMuZ9cKHvQN8reiXdTTNIxzl8HwrPsyfQzC0WMNMrB1GbA1FrP+lIfd29m0cOZMj1kF2o6WXTcOvUF6uYTS5ouNrEZjTo0bX37wQQyTVUSm0sdWBkz03/ySaF1Z0W6RMg+sT17v6Njkc0b5x7HifQm+/Mp0tbDfhX5NFjmaksS6y0nTP3sVWx7T0A+C5tJeYMKbN2zgBQaxlXY8e4eNtvtJvyR8U8vSqD8xtb0cigC6MhCLES8Vys77WC9FAMfziVTjjGfjPOct/YT812hkprW99oSDyE82BZzYr/okyaXt/cNfovddiCFe2hJ6ktSN1SAvhio26sgyg8R+iJSc5Z8gg/OgAKlhbI8x/rPHA9/rxnSDcjlFNQGU1B0qSQ0Z6Ct4B0PUJe8wCNt7qwUE+pRWSMwpBFOaKxzcFWAI+mkMY/MEx75IwBPPv8RR8ZgKyRN2zSl7+P4ndFfvhqr/B+V8AZbMoBZJnq+RxGkTO/7pnYbBGmdXl75QF47x0wNocX8drs8GaInDGs+p6p6RGy7VYsFkYNdux0UbUbIyA6noU8c/d9jCxxfBePtASforJvLhP8NFAWi/R1skdyRXt/ytLLnRQOIQNXk80/Zq008OsxMb86EBebmtcjcLe+crGmBiR1PeCRZ6vsTaZRx7ihBIu8IaoF3p+p9nbqdo7Ra51gPBq4LqHk/bTbIYkUSpKPDteD5BjxtkLFb+gUcKBJYoL8=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content></entry><entry><title>百鸟朝凤</title><link href="http://shangfute.github.com/phoenix-song.html" rel="alternate"></link><published>2016-05-21T21:58:27+08:00</published><updated>2016-05-21T21:58:27+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-21:/phoenix-song.html</id><summary type="html">&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</summary><content type="html">&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</content><category term="movie"></category></entry><entry><title>蓝牙共享网络</title><link href="http://shangfute.github.com/bluetooth-network.html" rel="alternate"></link><published>2016-05-20T13:51:55+08:00</published><updated>2016-05-20T13:51:55+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-20:/bluetooth-network.html</id><summary type="html">&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</summary><content type="html">&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</content><category term="skill"></category><category term="bluetooth"></category></entry><entry><title>非凡的推断</title><link href="http://shangfute.github.com/non-trivil-reduction.html" rel="alternate"></link><published>2016-05-16T23:05:31+08:00</published><updated>2016-05-16T23:05:31+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-16:/non-trivil-reduction.html</id><summary type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</summary><content type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</content><category term="chess"></category><category term="character"></category></entry><entry><title>英语学习</title><link href="http://shangfute.github.com/learn-english.html" rel="alternate"></link><published>2016-05-14T15:37:57+08:00</published><updated>2016-05-14T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-14:/learn-english.html</id><summary type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</content><category term="english"></category><category term="daily"></category><category term="learn"></category></entry><entry><title>[Encrypted] 考博之后的思考</title><link href="http://shangfute.github.com/after-submission.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><updated>2016-05-12T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:/after-submission.html</id><summary type="html"></summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;OqAqcm1Ir9v6EsGwToiwhw==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content><category term="thoughts"></category></entry><entry><title>[Encrypted] Think Flow</title><link href="http://shangfute.github.com/think-flow.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><updated>2016-05-12T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:/think-flow.html</id><summary type="html"></summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;IwuTF5bcMuj1LUZ4e+5JcQ==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content><category term="thoughts"></category></entry></feed>