<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shangfute's Blog - life</title><link href="http://shangfute.github.com/" rel="alternate"></link><link href="http://shangfute.github.com/feeds/life.atom.xml" rel="self"></link><id>http://shangfute.github.com/</id><updated>2017-02-17T08:52:07+08:00</updated><entry><title>新学期计划</title><link href="http://shangfute.github.com/first-term-plan.html" rel="alternate"></link><published>2017-02-17T08:52:07+08:00</published><updated>2017-02-17T08:52:07+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2017-02-17:/first-term-plan.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;找研究方向&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读大量文章，回答下面问题：&lt;/p&gt;
&lt;p&gt;目前都有哪些研究团体在做CPS安全？&lt;/p&gt;
&lt;p&gt;他们都在做什么问题，哪些更有意义？尽可能多读，不只论文。&lt;/p&gt;
&lt;p&gt;哪些问题是刚出现的，没有很好的解决方案？或者解决方案较少的问题？&lt;/p&gt;
&lt;p&gt;还有没有什么我可以做的，如何从新的角度探索这个问题？&lt;/p&gt;
&lt;p&gt;利用自己的优势：编程？理论？算法？机器学习？&lt;/p&gt;
&lt;p&gt;每次看论文时，考虑如果我来做这个问题，我会怎么做？&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;找研究方向&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读大量文章，回答下面问题：&lt;/p&gt;
&lt;p&gt;目前都有哪些研究团体在做CPS安全？&lt;/p&gt;
&lt;p&gt;他们都在做什么问题，哪些更有意义？尽可能多读，不只论文。&lt;/p&gt;
&lt;p&gt;哪些问题是刚出现的，没有很好的解决方案？或者解决方案较少的问题？&lt;/p&gt;
&lt;p&gt;还有没有什么我可以做的，如何从新的角度探索这个问题？&lt;/p&gt;
&lt;p&gt;利用自己的优势：编程？理论？算法？机器学习？&lt;/p&gt;
&lt;p&gt;每次看论文时，考虑如果我来做这个问题，我会怎么做？&lt;/p&gt;</content><category term="plan"></category></entry><entry><title>我的时间管理方案</title><link href="http://shangfute.github.com/time-managemnet.html" rel="alternate"></link><published>2016-05-24T22:57:17+08:00</published><updated>2016-05-24T22:57:17+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-24:/time-managemnet.html</id><summary type="html">&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</summary><content type="html">&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</content><category term="GTD"></category><category term="time"></category></entry><entry><title>[Encrypted] Tangled Thoughts</title><link href="http://shangfute.github.com/tangled-thoughts.html" rel="alternate"></link><published>2016-05-22T22:20:39+08:00</published><updated>2016-05-22T22:20:39+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-22:/tangled-thoughts.html</id><summary type="html"></summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;hJNKyx28rVr4l4jKV9tvUA==;cI+FF/ziS/P7ZpL0TgSHC3M7XvG3hrDlkqToIj3A//fGzYnVKuG/qQsUHBmo0EF4Mw5+VTr2HugWegsDhiZxGvzk66RIm1e7pfloJGbZWMXYXG/qzgLSH6rEKCb8I823haIydqkk94jC7Sg210zOOen7D2XQkoNbxP1QbHgFzqA5iXeCE1UvBmAnnvyJuMW/LzSYe1VYLJdiXArYd9YdKAMkRiTN7JYUDjRo3n7l/6aYdfL7xtOSJtx5RVL6xoQwpBEfH2OGLA5BTXfu4qrdPDRe7k+jCQz88OxFVVPSHbX7oLxsLxan+OIm+Pd33jRKRqOH6aZogGF4dODX9mf7QA7WTCNAF/9LVWDevN/OZmq0JgHCRY/LOGbqxT/RXlGBOAuqaQmTHsfN+UHX4oJnDA0JfBFXZb8xcvBL4JU15pa9e81F06mkAMI9VfnJwyWbyWmPaN030MMHqqD3bpqJVheErUAQ2+9qtqpyUh5dwWK8EChdKsTFBA0sqBuUspfe0kjQCjxm0M8vrpUNPixo3ySTq8nhq0VyoqnUHClo0d7tqCxRN9JBt4t4FeNtrHHvrC0uUXAFcgGYJCE7309d7a4SpBLiExguUUtladg6N+ZT8YI7BMYzQ8Nng8Agwhw9FnM7e8Xy9ldR1YMhhTuOnPQe1Bs18mRjZDb3uSCMyFHig0NDdtNO12VpG3NYh705cO6b0TgdTYo9Csjh0wVvoTr7pnLqX58e8022eZBsFiLRXGH3L1Fi2ACwFdZK0xckjkvXnndkwB1fts2qUSoAIpOrjBsDQIY9+FxJuo/JZwcKPQu7XH6GC5hhfnVLLrmWOPOuyTYNc1xKMNY54o9akOgch3orO5M1InpeuMDsU/Iz7EpiKhxYE8+KcYO3eVKFLJLssTHOXQ7nXrZl83WJprlagz/l0sGhkArRT1Apr1XcSwjGtsvlUQ++5wGLKDTxJiaNZndU8zFOBerS7Thsey8rHwyFQZQ5hcCXBxZmMpBePW7I/3jp634XDFqHA9ZxK4iA3cSjhCuqEfYvVCTcCeoU+Q4kyVdgl6uOTnZAlEJMhLbX8kwzjXKKTXNOQwiTa9NzE8T7G4XnpZmgpWMF8GLn6kxlDIJdyehFctHrmwAgQsXxHndpINTygwTAkBZoUhUOl73kI5ZMis9Vtr4eKMqdJkP1NMdsrhzTIXAyFQ/0c50vcctlEVLGEEmR85jxY5lc3DLX0XFiU1sVEZOQdDr7Ihb9PFjknmTgGdWeouSFb8U+dY7e+dqVvmEX2TEUjHIH90FOWGs4bbVdchcvPA2UB992MYl2QYn2hBYqyAzw9PPHD/T2hFrbaa1RbvFIobVrcQRHv2368TIEOcyglSE/LNP5P+T+82ztHFbMwRoJI0RxNE1hzwWVn9wXW17DXXp/la+EQxx/vVBU0aimzofn29QHNZiZvEXJFo/qE0o=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content></entry><entry><title>百鸟朝凤</title><link href="http://shangfute.github.com/phoenix-song.html" rel="alternate"></link><published>2016-05-21T21:58:27+08:00</published><updated>2016-05-21T21:58:27+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-21:/phoenix-song.html</id><summary type="html">&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</summary><content type="html">&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</content><category term="movie"></category></entry><entry><title>蓝牙共享网络</title><link href="http://shangfute.github.com/bluetooth-network.html" rel="alternate"></link><published>2016-05-20T13:51:55+08:00</published><updated>2016-05-20T13:51:55+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-20:/bluetooth-network.html</id><summary type="html">&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</summary><content type="html">&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</content><category term="skill"></category><category term="bluetooth"></category></entry><entry><title>非凡的推断</title><link href="http://shangfute.github.com/non-trivil-reduction.html" rel="alternate"></link><published>2016-05-16T23:05:31+08:00</published><updated>2016-05-16T23:05:31+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-16:/non-trivil-reduction.html</id><summary type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</summary><content type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</content><category term="chess"></category><category term="character"></category></entry><entry><title>英语学习</title><link href="http://shangfute.github.com/learn-english.html" rel="alternate"></link><published>2016-05-14T15:37:57+08:00</published><updated>2016-05-14T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-14:/learn-english.html</id><summary type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</content><category term="english"></category><category term="daily"></category><category term="learn"></category></entry><entry><title>[Encrypted] 考博之后的思考</title><link href="http://shangfute.github.com/after-submission.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><updated>2016-05-12T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:/after-submission.html</id><summary type="html"></summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;63rexR+Foqq0UyrNfYRmmw==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content><category term="thoughts"></category></entry><entry><title>[Encrypted] Think Flow</title><link href="http://shangfute.github.com/think-flow.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><updated>2016-05-12T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:/think-flow.html</id><summary type="html"></summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;1jZLCXwM09pe3qKTVvETjA==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content><category term="thoughts"></category></entry></feed>