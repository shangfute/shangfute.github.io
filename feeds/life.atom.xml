<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shangfute's Blog - life</title><link href="http://shangfute.github.com/" rel="alternate"></link><link href="http://shangfute.github.com/feeds/life.atom.xml" rel="self"></link><id>http://shangfute.github.com/</id><updated>2017-02-17T08:52:07+08:00</updated><entry><title>新学期计划</title><link href="http://shangfute.github.com/first-term-plan.html" rel="alternate"></link><published>2017-02-17T08:52:07+08:00</published><updated>2017-02-17T08:52:07+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2017-02-17:/first-term-plan.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;找研究方向&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读大量文章，回答下面问题：&lt;/p&gt;
&lt;p&gt;目前都有哪些研究团体在做CPS安全？&lt;/p&gt;
&lt;p&gt;他们都在做什么问题，哪些更有意义？尽可能多读，不只论文。&lt;/p&gt;
&lt;p&gt;哪些问题是刚出现的，没有很好的解决方案？或者解决方案较少的问题？&lt;/p&gt;
&lt;p&gt;还有没有什么我可以做的，如何从新的角度探索这个问题？&lt;/p&gt;
&lt;p&gt;利用自己的优势：编程？理论？算法？机器学习？&lt;/p&gt;
&lt;p&gt;每次看论文时，考虑如果我来做这个问题，我会怎么做？&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;找研究方向&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读大量文章，回答下面问题：&lt;/p&gt;
&lt;p&gt;目前都有哪些研究团体在做CPS安全？&lt;/p&gt;
&lt;p&gt;他们都在做什么问题，哪些更有意义？尽可能多读，不只论文。&lt;/p&gt;
&lt;p&gt;哪些问题是刚出现的，没有很好的解决方案？或者解决方案较少的问题？&lt;/p&gt;
&lt;p&gt;还有没有什么我可以做的，如何从新的角度探索这个问题？&lt;/p&gt;
&lt;p&gt;利用自己的优势：编程？理论？算法？机器学习？&lt;/p&gt;
&lt;p&gt;每次看论文时，考虑如果我来做这个问题，我会怎么做？&lt;/p&gt;</content><category term="plan"></category></entry><entry><title>我的时间管理方案</title><link href="http://shangfute.github.com/time-managemnet.html" rel="alternate"></link><published>2016-05-24T22:57:17+08:00</published><updated>2016-05-24T22:57:17+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-24:/time-managemnet.html</id><summary type="html">&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</summary><content type="html">&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</content><category term="GTD"></category><category term="time"></category></entry><entry><title>[Encrypted] Tangled Thoughts</title><link href="http://shangfute.github.com/tangled-thoughts.html" rel="alternate"></link><published>2016-05-22T22:20:39+08:00</published><updated>2016-05-22T22:20:39+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-22:/tangled-thoughts.html</id><summary type="html">This content is encrypted.</summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;XI68aPi7O+X5i05Anf8pww==;LyqER/sqyw6pJEoQv/C6x/ye/M7p8YeJXtnGBJSex/7kzYSljt0AiyHmd1a+1dm1Sma89MAL4e1LV2n6jhirNac7FUXy95/G9Y98OGOy9ivC7PWA2aPJCQk5eXpdOxH+gZWilx1KPAzPWDuHEa/Lg/4QRoT/a4iENcNJJBi9UF1BsmMqaPoRmN7YZNq4h4n7diZ6MZoXJ6LZRrEStAgOdgqPJf5DK0f+BxCVKJgxpGPEsaInvTSj+FCnCtv/o/dO5Nkg5CLkO7GRl4E23xG0a3IpYrC4danRKY5liCZgyK5nS945GXZtizyg/VKQiWfNQvtK6kFuZwKvLLV/mgxeh2ROOi2v3Id0BVoK/d2hIUjUaBS4pDi4suY+LKOzWeiC+9PrI/JDAqAJCm3q3uPtlm3ha/u7Xz2NulUdcDlHiKX6aCB4x1qnClJw9v9VkiNQENeA1smLelicNClHx1xBVCdTWIY6Fagu4R1oDNgDJRrmK7V86Lges5ga6dHaXv4POf0UJ6t0mABAy9fGqmq1FDp9uAM1b4sCPZLr056VB6Hc/MvRcAYSgLZUcUSl7NLXXlY0szOhoo+3+jJQ1HLz9asTPhhaZJ3cQLDxhd3x2Fn/viwwiM1LR+4a6wbKJxEhQMjvJUue4XypVyZQ/DXecVByrP1jwOU3kmVCxk2xarSPaig0Oo5LTrIaikcoYvKfh35lnkU9vDY+jCknATz8JLsKH9+sW80VT82JHJvTO8VoI+q1n4QLLFa9dwodOglil3MUIAGKbd9aR7X7P+o7f9QYFTwDnXQpxlTT7SkSbvbZ92vcG6ZqsIsUT60EnGfUX13BoT7QKFtQwfwfS5ddIMYdDxGLs555TDiAMxzRHjYsblKWVrtS//em6D/a6fFQuBuN5i2OVy+OBeeo+sOI4sUMirmNmnsdg60Ge+9/nhvDAT3TFW/mFS05MvoM3sxJB2ApyWyCpXqZV9VC60HJpAEfiy+/Xgm5WFpZKxwoJlDWrUYI9ZIZ4WQPQIR/glQ9bRVQY4LSgdgwJfbFNAj/AtyG0Xvs38mn2ah3cl3QBqv4eVeIqLDSDarvKTzcSh4SGWV09yvyfkzDFtngkBsAegRtUF+VYi32jjpm/pRhvV3wjtTtjQ8yGeCW/OUSe1+djpomxraIyhhWDwLChXFx8PP7Duakpur2/gyJBUANFEEG3zBOEUKf5Gx9cQaqGuqr3R1ju2YEy6iuEKJcb7HOQaJ2G/Zf0HKRGo2xx0DR2SzSMKRyAvrUP0m0NhpP/F9KNhA8PbIkG8sNEVse/aOtmLSeZRFMPT9ZYlCnKFKUO98zg8MIlnvpuQT0ldJXn2tNNIQ3s5V5nDA1zhI26e+TSiQYyfEJEb+uNmsQ6TgswFogmhndxYywdbyQ/loHt4oj2UUHuOOVzWyjDBORYJo+1AB9khn5+jhrr70nV1JOie8=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content></entry><entry><title>百鸟朝凤</title><link href="http://shangfute.github.com/phoenix-song.html" rel="alternate"></link><published>2016-05-21T21:58:27+08:00</published><updated>2016-05-21T21:58:27+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-21:/phoenix-song.html</id><summary type="html">&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</summary><content type="html">&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</content><category term="movie"></category></entry><entry><title>蓝牙共享网络</title><link href="http://shangfute.github.com/bluetooth-network.html" rel="alternate"></link><published>2016-05-20T13:51:55+08:00</published><updated>2016-05-20T13:51:55+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-20:/bluetooth-network.html</id><summary type="html">&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</summary><content type="html">&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</content><category term="skill"></category><category term="bluetooth"></category></entry><entry><title>非凡的推断</title><link href="http://shangfute.github.com/non-trivil-reduction.html" rel="alternate"></link><published>2016-05-16T23:05:31+08:00</published><updated>2016-05-16T23:05:31+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-16:/non-trivil-reduction.html</id><summary type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</summary><content type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</content><category term="chess"></category><category term="character"></category></entry><entry><title>英语学习</title><link href="http://shangfute.github.com/learn-english.html" rel="alternate"></link><published>2016-05-14T15:37:57+08:00</published><updated>2016-05-14T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-14:/learn-english.html</id><summary type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</content><category term="english"></category><category term="daily"></category><category term="learn"></category></entry><entry><title>[Encrypted] 考博之后的思考</title><link href="http://shangfute.github.com/after-submission.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><updated>2016-05-12T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:/after-submission.html</id><summary type="html">This content is encrypted.</summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;KK4ECpheGxC7IjAKgo40nQ==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content><category term="thoughts"></category></entry><entry><title>[Encrypted] Think Flow</title><link href="http://shangfute.github.com/think-flow.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><updated>2016-05-12T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:/think-flow.html</id><summary type="html">This content is encrypted.</summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;1a86YcETu8mXCxsi1/OiBQ==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content><category term="thoughts"></category></entry></feed>