<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shangfute's Blog</title><link href="http://shangfute.github.com/" rel="alternate"></link><link href="http://shangfute.github.com/feeds/all-zh-cmn-hans.atom.xml" rel="self"></link><id>http://shangfute.github.com/</id><updated>2016-05-16T23:05:31+08:00</updated><entry><title>非凡的推断</title><link href="http://shangfute.github.com/non-trivil-reduction.html" rel="alternate"></link><published>2016-05-16T23:05:31+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-16:non-trivil-reduction.html</id><summary type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</summary><category term="chess"></category><category term="character"></category></entry><entry><title>形式化协议分析方法</title><link href="http://shangfute.github.com/protocol-analysis.html" rel="alternate"></link><published>2016-05-15T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-15:protocol-analysis.html</id><summary type="html">&lt;p&gt;今天从CS259学习到一个关于协议分析的学习方法，我取名叫演变法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到一个安全协议的描述文档，例如RFC。&lt;/li&gt;
&lt;li&gt;根据描述，忽略一些协议细节，抽取协议的基本构造。&lt;/li&gt;
&lt;li&gt;将构造形式化。&lt;/li&gt;
&lt;li&gt;分析形式化协议，发现协议漏洞。&lt;/li&gt;
&lt;li&gt;对比描述文档，分析完整协议如何解决该漏洞的。&lt;/li&gt;
&lt;li&gt;打补丁后，重复第3步。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如此从原始构造，演变到最后版本的协议，能够深刻理解协议中的细节描述，分别都是为了解决什么问题的。&lt;/p&gt;
&lt;p&gt;这个方法同样适用于软件的安全性分析。&lt;/p&gt;</summary><category term="formal method"></category><category term="protocol analysis"></category><category term="learn"></category></entry><entry><title>英语学习</title><link href="http://shangfute.github.com/learn-english.html" rel="alternate"></link><published>2016-05-14T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-14:learn-english.html</id><summary type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</summary><category term="english"></category><category term="daily"></category><category term="learn"></category></entry><entry><title>Have Fun With Cryptography</title><link href="http://shangfute.github.com/why-encrypt.html" rel="alternate"></link><published>2016-05-13T22:11:03+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-13:why-encrypt.html</id><summary type="html">&lt;p&gt;今天刚刚在 github 上创建了主页，一共才三篇文章，就有一篇是加密的，遭到朋友们的抱怨。其实文章仅仅是一些没有整理好的思想罢了，但是为了测试一下加密功能，因此才加密了一下。另外，这个网站的主题就是密码学，因此我十分乐意让这个主题更突出一些。&lt;/p&gt;
&lt;p&gt;密码学太有用了，我不想只从理论研究的角度学习密码学，更想将其应用到实践中去。我希望能够实现下面的应用。&lt;/p&gt;
&lt;h2&gt;安全的评论&lt;/h2&gt;
&lt;p&gt;相信本文读者都在使用各种各样的网络应用，这些网络应用大多存在于云服务器上，客户端通常就是一个浏览器。大公司还可以构建自己的云，但许多小型组织和个人还是在租用公有云，因此数据存储在别人的计算机上。比如，大家使用淘宝时，交易记录都是存储在淘宝服务器上的，你可以查找之前在淘宝上买过的所以东西。这样做有很多好处，但同样难以保证这些数据的完整性，不被恶意修改。另一方面，难以保证这些数据不被用作它途，被恶意数据挖掘等等。&lt;/p&gt;
&lt;p&gt;比如文章评论功能可以自己实现，也可以将该项工作外包给别人。本站点的评论功能使用了多说的社会化评论服务，评论的数据以明文的形式存储在多说的服务器上。每次访问网站时，浏览器向多说的服务器发送请求，获得评论。因此难以确保这些外包的数据有没有被修改。这时候评论数据不需要保密，但是应当保证不被修改。&lt;/p&gt;
&lt;p&gt;一项工作有多少实际价值，就看它能帮助什么人，解决什么问题。帮助的人越多，解决的问题越普遍，越重要，价值越大。这个问题可以推广为如何保证外包数据的完整性。做为一个密码学狗，马上想到构造恰当的密码学协议来解决这个问题。当然可能还有其他解决方法，不要将自己局限与特定领域，应当使用所有可能知识来解决。比如，我可以和多说签订合同，如果对方违约没有保护好数据，就应当赔我多少钱。但对我来说，这种方法显然有些困难。最后我会选取能够想到的最简单的方法来解决这个问题。&lt;/p&gt;
&lt;p&gt;密码学从根本上讲，或许就是一种通过数学方法来解决信任问题的学问。密码学想要将对某个人或组织的信任，等价为对某种数学问题的难解性的信任。如果你相信数学，那么你也应当相信大家可以共同完成某个任务。&lt;/p&gt;</summary><category term="web"></category><category term="crypto"></category><category term="cloud"></category></entry><entry><title>[Encrypted] Think flow</title><link href="http://shangfute.github.com/think-flow.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:think-flow.html</id><summary type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;kBQyvuz+7yL9SzesgTFdXg==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</summary><category term="thoughts"></category></entry><entry><title>第一篇文章</title><link href="http://shangfute.github.com/di-yi-pian-wen-zhang.html" rel="alternate"></link><published>2016-05-12T13:37:57+08:00</published><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:di-yi-pian-wen-zhang.html</id><summary type="html">&lt;h2&gt;记录博客搭建过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pelican安装&lt;/li&gt;
&lt;li&gt;github pages&lt;/li&gt;
&lt;li&gt;pelican 插件&lt;/li&gt;
&lt;li&gt;select themes&lt;ul&gt;
&lt;li&gt;bootstrap2-dark&lt;/li&gt;
&lt;li&gt;aboutwilson&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加评论功能 Duoshuo&lt;/li&gt;
&lt;li&gt;站点图 sitemap&lt;/li&gt;
&lt;li&gt;RSS订阅&lt;/li&gt;
&lt;li&gt;文章加密&lt;/li&gt;
&lt;li&gt;日常写作流程&lt;/li&gt;
&lt;li&gt;图床&lt;/li&gt;
&lt;li&gt;代码高亮显示&lt;/li&gt;
&lt;li&gt;公式 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelican_plugins&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;尚福特&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;Shangfute&amp;#39;s Blog&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Cryptography &amp;amp; Program Anaylsis&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://localhost:8000&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;zh-cmn-Hans&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.rss.xml&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Freebuf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://freebuf.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ltyleader&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://litengyao.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;shangfute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;mailto://shangfute@163.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c"&gt;# RELATIVE_URLS = True&lt;/span&gt;

&lt;span class="n"&gt;JINJA_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;jinja2.ext.ExprStmtExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/shangfute&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;priorities&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;changefreqs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;ENCRYPT_CONTENT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;title_prefix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;[Encrypted]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;summary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;This content is encrypted.&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;E:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;workspace&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;blog&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;pelican-themes&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;aboutwilson&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# from pelican-plugins&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="math"&gt;\(Enc_k\)&lt;/span&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary><category term="write"></category><category term="think"></category></entry></feed>