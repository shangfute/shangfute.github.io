<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shangfute's Blog</title><link href="http://shangfute.github.com/" rel="alternate"></link><link href="http://shangfute.github.com/feeds/all-zh-cmn-hans.atom.xml" rel="self"></link><id>http://shangfute.github.com/</id><updated>2017-02-23T09:25:08+08:00</updated><entry><title>CPS 安全综述</title><link href="http://shangfute.github.com/cps-security.html" rel="alternate"></link><published>2017-02-23T09:25:08+08:00</published><updated>2017-02-23T09:25:08+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2017-02-23:/cps-security.html</id><summary type="html">&lt;p&gt;本文是对&lt;code&gt;Cyber-Physical Systems Security: a Systematic Mapping Study&lt;/code&gt;的学习笔记。&lt;/p&gt;
&lt;h2&gt;0. 引言&lt;/h2&gt;
&lt;p&gt;Cyber-physical systems (CPS) 是完成&lt;strong&gt;计算、通信、控制&lt;/strong&gt;的软硬件的无缝集成，与物理组件联合设计。由控制器、传感器、激励器三大组件构成。在2006年左右提出。&lt;/p&gt;
&lt;p&gt;CPS的应用领域包括：可信医疗设备、生活助理、交通管控、能源保护、环境控制、航空、关键基础设施（电力、水资源、通信系统等）、制造业、智慧建筑等。可以预见CPS的发展将使20世纪的IT技术革命相形见绌。&lt;/p&gt;
&lt;p&gt;CPS与传统IT系统的区别：CPS是资源受限的实时系统。&lt;/p&gt;
&lt;p&gt;毫无疑问这些系统的&lt;strong&gt;安全性(security)&lt;/strong&gt;是需要考虑的主要因素。环境的不确定性、安全攻击、物理设备的故障都可能导致安全问题。&lt;/p&gt;
&lt;p&gt;给定CPS中使用的&lt;strong&gt;估计和控制算法&lt;/strong&gt;，设计要满足的 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;本文是对&lt;code&gt;Cyber-Physical Systems Security: a Systematic Mapping Study&lt;/code&gt;的学习笔记。&lt;/p&gt;
&lt;h2&gt;0. 引言&lt;/h2&gt;
&lt;p&gt;Cyber-physical systems (CPS) 是完成&lt;strong&gt;计算、通信、控制&lt;/strong&gt;的软硬件的无缝集成，与物理组件联合设计。由控制器、传感器、激励器三大组件构成。在2006年左右提出。&lt;/p&gt;
&lt;p&gt;CPS的应用领域包括：可信医疗设备、生活助理、交通管控、能源保护、环境控制、航空、关键基础设施（电力、水资源、通信系统等）、制造业、智慧建筑等。可以预见CPS的发展将使20世纪的IT技术革命相形见绌。&lt;/p&gt;
&lt;p&gt;CPS与传统IT系统的区别：CPS是资源受限的实时系统。&lt;/p&gt;
&lt;p&gt;毫无疑问这些系统的&lt;strong&gt;安全性(security)&lt;/strong&gt;是需要考虑的主要因素。环境的不确定性、安全攻击、物理设备的故障都可能导致安全问题。&lt;/p&gt;
&lt;p&gt;给定CPS中使用的&lt;strong&gt;估计和控制算法&lt;/strong&gt;，设计要满足的&lt;strong&gt;运行目标（operational goals）&lt;/strong&gt;（例如，闭环稳定性、安全性safety、存活性liveness、性能最优化性），可以定义CPS中的三大安全（security）特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;机密性(Confidentiality)：防止攻击者通过窃听通信链路和边信道攻击节点的方法推断物理系统的状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完整性(integrity)：通过预防、检测、缓解等方式，防御针对控制器、传感器、激励器的欺骗攻击，维持运行目标。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可用性(availability)：通过预防、缓解针对控制器、传感器、激励器的拒绝服务攻击，维持运行目标。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：safety是CPS运行目标中的物理特性，而security是由很多特性组成的性质。security会间接影响safety。但满足safety不一定满足security。&lt;/p&gt;
&lt;p&gt;从系统层考虑安全性的两个途径：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;安全设计：根据多层安全方法、纵深防御策略、移动目标防御范式等原则进行设计。在CPS设计与分析时，需要考虑实际和理性攻击者模型，根据量化安全度量，进行架构的可信分析。为了保证系统设计和实现的安全性、正确性，可以采用形式化验证方法，例如，定理证明或模型检查。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安全机制：涉及而不局限于CPS的传网络安全机制包括认证、访问控制、审计、密码学、边界保护等。入侵检测、自动响应和恢复等响应式安全机制反而可以有效利用CPS的特征，根据物理系统的模型揭露异常行为。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;1. 研究领域枚举：问题会出现在哪里？&lt;/h2&gt;
&lt;h3&gt;1.1 第一维度：目标系统&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;电网&lt;/li&gt;
&lt;li&gt;航空管制&lt;/li&gt;
&lt;li&gt;工业控制&lt;/li&gt;
&lt;li&gt;物联网&lt;/li&gt;
&lt;li&gt;无人机&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据统计大多数研究集中在电网领域。这可能由于智能电网被认为是持续发展、生活质量、国家竞争力的驱动器，所以吸引了大量的研究力量。&lt;/p&gt;
&lt;p&gt;少量研究集中在无人驾驶汽车、航空系统、智能楼宇系统领域。这些研究领域相对较新，第一篇研究出现在2012年，是未来的研究方向。&lt;/p&gt;
&lt;p&gt;不同物理领域会采用不同的数学模型进行描述。通常采用线性时不变或非线性动态模型进行建模。为了描述物理模型与实际控制系统的差异，一般有三类过程噪声模型：高斯噪声，有界噪声（非随机），无噪声。根据不同噪声假设，产生不同的传感器量测模型。&lt;/p&gt;
&lt;h3&gt;1.2 第二维度：安全属性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Confidentiality：机密性&lt;/li&gt;
&lt;li&gt;Integrity：数据、来源完整性&lt;/li&gt;
&lt;li&gt;Availability：可用性&lt;/li&gt;
&lt;li&gt;Authentication：认证性&lt;/li&gt;
&lt;li&gt;Authorization：授权性&lt;/li&gt;
&lt;li&gt;Non-repudiation：不可抵赖性&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;超过90%的研究集中在CPS完整性方面。只有少量研究关注可用性和机密性方面，应用博弈论设计智能干扰攻击的防御手段。&lt;/p&gt;
&lt;h3&gt;1.3 第三维度：系统组件&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;传感器&lt;/li&gt;
&lt;li&gt;激励器&lt;/li&gt;
&lt;li&gt;通信系统&lt;/li&gt;
&lt;li&gt;控制系统&lt;/li&gt;
&lt;li&gt;设备（plant）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;攻击或防御手段一般针对五种系统组件的特定集合中。例如，虚假数据注入攻击主要目标是一组传感器。load altering可以攻击一组激励器。&lt;/p&gt;
&lt;p&gt;从实践角度看，攻击一个传感器可以解释为攻击传感器节点本身，也可以解释为攻击传感器和接收设备之间的通信链路。攻击激励器同理。因此，攻击网络一般指拒绝服务攻击或攻击传输调度、路由等网络相关的缺陷。同理，攻击控制器指攻击控制器的缺陷。而攻击设备指对物理层的攻击和窃听。&lt;/p&gt;
&lt;h3&gt;1.4 第四维度：估计算法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;最小二乘法&lt;/li&gt;
&lt;li&gt;（扩展）卡尔曼滤波方法&lt;/li&gt;
&lt;li&gt;Luenberger observer&lt;/li&gt;
&lt;li&gt;&lt;span class="math"&gt;\(H_{\infinity}\)&lt;/span&gt;滤波器&lt;/li&gt;
&lt;li&gt;最小切边平方估计算法&lt;/li&gt;
&lt;li&gt;其他特有估计算法&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为不能量测系统所有状态，所以需要状态估计。研究最多的算法是加权最小二乘法WLS，都涉及电网，因为可以证明在高斯噪声下，WLS是最优的电网状态估计算法。除此以外，还有（扩展）卡尔曼滤波方法、Luenberger observer、&lt;span class="math"&gt;\(H_{\infinity}\)&lt;/span&gt;滤波器、最小切边平方估计算法和其他特有估计算法。&lt;/p&gt;
&lt;p&gt;特有估计算法包括：针对特定应用的估计算法、针对电网的分布式状态估计算法、通用的抗攻击解决方案、基于图论的抗协作式稀疏攻击的估计算法、考虑赛博影响因子矩阵的改进WLS。&lt;/p&gt;
&lt;p&gt;为了防御通用CPS的传感器和激励器攻击，Fawzi利用压缩感知和实数误差校正的方法提出了状态重构器。Pajic发现抖动、延迟和同步误差等实现问题能够作为状态估计算法的参数，描述建模误差。 Mo构造了标量状态的最优估计器，使得最坏情况下的预期费用最小，即使攻击者可以对量测任意操作。Weimer等人对随机系统引入最小均方误差剩余，其条件均方误差保持有界，并且独立于加性量测攻击。&lt;/p&gt;
&lt;p&gt;为了防御线性动态系统的传感器攻击，Shoukry提出抗稀疏攻击的事件触发的Luenberger observer。Shoukry提出一种有效的算法利用SMT方法，隔离被攻击的传感器，估计系统状态。&lt;/p&gt;
&lt;p&gt;这些研究反映了抗量测攻击状态估计算法是CPS安全领域的研究热点。&lt;/p&gt;
&lt;h3&gt;1.5 第五维度：异常检测&lt;/h3&gt;
&lt;p&gt;当前的状态估计算法使用坏数据检测(BDD)算法，检测量测数据中的随机异常值。两种使用最多的BDD假设检验是性能索引测试(performance index test)和最大正则剩余测试(largest normalized residual test)。&lt;/p&gt;
&lt;h2&gt;2 解决方法有哪些？&lt;/h2&gt;
&lt;p&gt;第一维度：防御策略&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;攻击&lt;/li&gt;
&lt;li&gt;形式化安全分析&lt;/li&gt;
&lt;li&gt;攻击缓解&lt;/li&gt;
&lt;li&gt;入侵检测&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二维度：理论方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;控制论&lt;/li&gt;
&lt;li&gt;博弈论&lt;/li&gt;
&lt;li&gt;逻辑学&lt;/li&gt;
&lt;li&gt;图论&lt;/li&gt;
&lt;li&gt;统计学习&lt;/li&gt;
&lt;li&gt;计算理论&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第三维度：实验方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仿真系统&lt;/li&gt;
&lt;li&gt;实测数据&lt;/li&gt;
&lt;li&gt;理论分析&lt;/li&gt;
&lt;li&gt;……&lt;/li&gt;
&lt;/ul&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="cps"></category><category term="security"></category></entry><entry><title>新学期计划</title><link href="http://shangfute.github.com/first-term-plan.html" rel="alternate"></link><published>2017-02-17T08:52:07+08:00</published><updated>2017-02-17T08:52:07+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2017-02-17:/first-term-plan.html</id><summary type="html">&lt;ol&gt;
&lt;li&gt;找研究方向&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读大量文章，回答下面问题：&lt;/p&gt;
&lt;p&gt;目前都有哪些研究团体在做CPS安全？&lt;/p&gt;
&lt;p&gt;他们都在做什么问题，哪些更有意义？尽可能多读，不只论文。&lt;/p&gt;
&lt;p&gt;哪些问题是刚出现的，没有很好的解决方案？或者解决方案较少的问题？&lt;/p&gt;
&lt;p&gt;还有没有什么我可以做的，如何从新的角度探索这个问题？&lt;/p&gt;
&lt;p&gt;利用自己的优势：编程？理论？算法？机器学习？&lt;/p&gt;
&lt;p&gt;每次看论文时，考虑如果我来做这个问题，我会怎么做？&lt;/p&gt;</summary><content type="html">&lt;ol&gt;
&lt;li&gt;找研究方向&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;读大量文章，回答下面问题：&lt;/p&gt;
&lt;p&gt;目前都有哪些研究团体在做CPS安全？&lt;/p&gt;
&lt;p&gt;他们都在做什么问题，哪些更有意义？尽可能多读，不只论文。&lt;/p&gt;
&lt;p&gt;哪些问题是刚出现的，没有很好的解决方案？或者解决方案较少的问题？&lt;/p&gt;
&lt;p&gt;还有没有什么我可以做的，如何从新的角度探索这个问题？&lt;/p&gt;
&lt;p&gt;利用自己的优势：编程？理论？算法？机器学习？&lt;/p&gt;
&lt;p&gt;每次看论文时，考虑如果我来做这个问题，我会怎么做？&lt;/p&gt;</content><category term="plan"></category></entry><entry><title>Git deploy</title><link href="http://shangfute.github.com/git-ssh-deploy.html" rel="alternate"></link><published>2016-06-26T23:33:07+08:00</published><updated>2016-06-26T23:33:07+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-06-26:/git-ssh-deploy.html</id><summary type="html">&lt;p&gt;Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。 github的SSH配置如下： &lt;/p&gt;
&lt;h2&gt;一 、 设置Git的user name和email：&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;shangfute&amp;quot;&lt;/span&gt; 
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;shangfute@163.com&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;二、生成SSH密钥过程：&lt;/h2&gt;
&lt;p&gt;1.查看是否已经有了ssh密钥：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd ~/.ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果没有密钥则不会有此文件夹，有则备份删除 &lt;/p&gt;
&lt;p&gt;2.生成密钥： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keygen&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;rsa&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;shangfute&lt;/span&gt;&lt;span class="mf"&gt;@163.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;

&lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;identification&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;shangfute&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Your …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Git是分布式的代码管理工具，远程的代码管理是基于SSH的，所以要使用远程的Git则需要SSH的配置。 github的SSH配置如下： &lt;/p&gt;
&lt;h2&gt;一 、 设置Git的user name和email：&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;shangfute&amp;quot;&lt;/span&gt; 
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;git&lt;/span&gt; &lt;span class="n"&gt;config&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;global&lt;/span&gt; &lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;email&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;shangfute@163.com&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;二、生成SSH密钥过程：&lt;/h2&gt;
&lt;p&gt;1.查看是否已经有了ssh密钥：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;cd ~/.ssh
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果没有密钥则不会有此文件夹，有则备份删除 &lt;/p&gt;
&lt;p&gt;2.生成密钥： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;keygen&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;rsa&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt; &lt;span class="err"&gt;“&lt;/span&gt;&lt;span class="n"&gt;shangfute&lt;/span&gt;&lt;span class="mf"&gt;@163.&lt;/span&gt;&lt;span class="n"&gt;com&lt;/span&gt;&lt;span class="err"&gt;”&lt;/span&gt;

&lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;identification&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;shangfute&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Your&lt;/span&gt; &lt;span class="n"&gt;public&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;has&lt;/span&gt; &lt;span class="n"&gt;been&lt;/span&gt; &lt;span class="n"&gt;saved&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;home&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;shangfute&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ssh&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;id_rsa&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pub&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt; &lt;span class="n"&gt;The&lt;/span&gt; &lt;span class="n"&gt;key&lt;/span&gt; &lt;span class="n"&gt;fingerprint&lt;/span&gt; &lt;span class="nl"&gt;is&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;………………&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;最后得到了两个文件：&lt;code&gt;id_rsa&lt;/code&gt;和&lt;code&gt;id_rsa.pub&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4.在&lt;code&gt;github&lt;/code&gt;上添加&lt;code&gt;ssh&lt;/code&gt;密钥，这要添加的是“id_rsa.pub”里面的公钥。 打开&lt;code&gt;https://github.com/&lt;/code&gt; ，登陆&lt;code&gt;shangfute&lt;/code&gt;，然后添加&lt;code&gt;ssh&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;5.测试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;ssh git@github.com 
The authenticity of host ‘github.com (207.97.227.239)’ can’t be established. RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48. Are you sure you want to continue connecting (yes/no)? yes Warning: Permanently added ‘github.com,207.97.227.239′ (RSA) to the list of known hosts. ERROR: Hi shangfute! You’ve successfully authenticated, but GitHub does not provide shell access Connection to github.com closed.
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;三、 开始使用github&lt;/h2&gt;
&lt;p&gt;1.获取源码： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone git@github.com:shangfute/github-services.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2.这样你的机器上就有一个repo了。 &lt;/p&gt;
&lt;p&gt;3.git于svn所不同的是git是分布式的，没有服务器概念。所有的人的机器上都有一个repo，每次提交都是给自己机器的repo &lt;/p&gt;
&lt;p&gt;仓库初始化： &lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;生成快照并存入项目索引： &lt;code&gt;git add&lt;/code&gt; 文件,还有&lt;code&gt;git rm&lt;/code&gt;,&lt;code&gt;git mv&lt;/code&gt;等等… &lt;/p&gt;
&lt;p&gt;项目索引提交： &lt;code&gt;git commit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;4.协作编程： &lt;/p&gt;
&lt;p&gt;将本地repo于远程的origin的repo合并， 推送本地更新到远程： &lt;code&gt;git push origin master&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;更新远程更新到本地： &lt;code&gt;git pull origin master&lt;/code&gt;&lt;/p&gt;</content><category term="web"></category><category term="learn"></category></entry><entry><title>Learn Haskell</title><link href="http://shangfute.github.com/haskell.html" rel="alternate"></link><published>2016-05-26T23:33:07+08:00</published><updated>2016-05-26T23:33:07+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-26:/haskell.html</id><summary type="html">&lt;p&gt;I found an interesting tuturial of Haskell programming language today, and had fun with the magic features of functional programming, lazy evaluation, type system and pattern matching. They are very different from the instructive programming language and very expressive. I want to learn more about how to translate them into …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I found an interesting tuturial of Haskell programming language today, and had fun with the magic features of functional programming, lazy evaluation, type system and pattern matching. They are very different from the instructive programming language and very expressive. I want to learn more about how to translate them into lambda calculation. I knew some techniques frome the SICP, but more details about realization need to practice. Maybe I would try to make some contribution to the community.&lt;/p&gt;</content><category term="functioanl programming"></category><category term="haskell"></category></entry><entry><title>并行架构</title><link href="http://shangfute.github.com/parallel-architechture.html" rel="alternate"></link><published>2016-05-24T22:57:17+08:00</published><updated>2016-05-24T22:57:17+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-24:/parallel-architechture.html</id><summary type="html">&lt;p&gt;并行架构分为位级并行、指令级并行、数据级并行以及任务级并行。&lt;/p&gt;
&lt;p&gt;我比较关注任务级并行，也就是我们平时常说的多处理器架构。对于多处理器架构还分为两种模型：共享内存模型和分布式内存模型。&lt;/p&gt;
&lt;p&gt;共享内存模型的多处理器架构依靠共享的内存进行通信，其效率一般比较高。而分布式内存模型中每个处理器都有一个本地内存，依靠网络进行通信，效率较低，但是更容易并行化。&lt;/p&gt;</summary><content type="html">&lt;p&gt;并行架构分为位级并行、指令级并行、数据级并行以及任务级并行。&lt;/p&gt;
&lt;p&gt;我比较关注任务级并行，也就是我们平时常说的多处理器架构。对于多处理器架构还分为两种模型：共享内存模型和分布式内存模型。&lt;/p&gt;
&lt;p&gt;共享内存模型的多处理器架构依靠共享的内存进行通信，其效率一般比较高。而分布式内存模型中每个处理器都有一个本地内存，依靠网络进行通信，效率较低，但是更容易并行化。&lt;/p&gt;</content><category term="parallization"></category></entry><entry><title>我的时间管理方案</title><link href="http://shangfute.github.com/time-managemnet.html" rel="alternate"></link><published>2016-05-24T22:57:17+08:00</published><updated>2016-05-24T22:57:17+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-24:/time-managemnet.html</id><summary type="html">&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</summary><content type="html">&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</content><category term="GTD"></category><category term="time"></category></entry><entry><title>并发与并行</title><link href="http://shangfute.github.com/concurrency-parallization.html" rel="alternate"></link><published>2016-05-23T23:17:23+08:00</published><updated>2016-05-23T23:17:23+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-23:/concurrency-parallization.html</id><summary type="html">&lt;p&gt;目前，计算机几乎无法离开并行计算的能力，同时编程中还有一个并发的概念。并发与并行看起来都是同时做某事，但实际上存在区别。&lt;/p&gt;
&lt;p&gt;并发指能够同时应对多个任务。并行指同时做多个任务的能力。区别在于一个是“应对”，一个是“做”。“应对”针对问题定义层面，“做”针对解决方法层面。比如，我们可以边看电视边烧饭，同时面临两个任务，是并发。同样可以再请别人帮忙一起做饭，同时解决问题，是并行。&lt;/p&gt;
&lt;p&gt;因此，并发不一定并行解决，并行同样不一定针对并发问题。并发任务在解决时可以按顺序逐一解决，当然也可以同时解决。并行也可以解决非并发的问题，提高计算效率。不过并行能够起作用一定是针对的问题可以转化为并发问题。&lt;/p&gt;</summary><content type="html">&lt;p&gt;目前，计算机几乎无法离开并行计算的能力，同时编程中还有一个并发的概念。并发与并行看起来都是同时做某事，但实际上存在区别。&lt;/p&gt;
&lt;p&gt;并发指能够同时应对多个任务。并行指同时做多个任务的能力。区别在于一个是“应对”，一个是“做”。“应对”针对问题定义层面，“做”针对解决方法层面。比如，我们可以边看电视边烧饭，同时面临两个任务，是并发。同样可以再请别人帮忙一起做饭，同时解决问题，是并行。&lt;/p&gt;
&lt;p&gt;因此，并发不一定并行解决，并行同样不一定针对并发问题。并发任务在解决时可以按顺序逐一解决，当然也可以同时解决。并行也可以解决非并发的问题，提高计算效率。不过并行能够起作用一定是针对的问题可以转化为并发问题。&lt;/p&gt;</content><category term="parallization"></category><category term="cocurrency"></category></entry><entry><title>[Encrypted] Tangled Thoughts</title><link href="http://shangfute.github.com/tangled-thoughts.html" rel="alternate"></link><published>2016-05-22T22:20:39+08:00</published><updated>2016-05-22T22:20:39+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-22:/tangled-thoughts.html</id><summary type="html">This content is encrypted.</summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;XI68aPi7O+X5i05Anf8pww==;LyqER/sqyw6pJEoQv/C6x/ye/M7p8YeJXtnGBJSex/7kzYSljt0AiyHmd1a+1dm1Sma89MAL4e1LV2n6jhirNac7FUXy95/G9Y98OGOy9ivC7PWA2aPJCQk5eXpdOxH+gZWilx1KPAzPWDuHEa/Lg/4QRoT/a4iENcNJJBi9UF1BsmMqaPoRmN7YZNq4h4n7diZ6MZoXJ6LZRrEStAgOdgqPJf5DK0f+BxCVKJgxpGPEsaInvTSj+FCnCtv/o/dO5Nkg5CLkO7GRl4E23xG0a3IpYrC4danRKY5liCZgyK5nS945GXZtizyg/VKQiWfNQvtK6kFuZwKvLLV/mgxeh2ROOi2v3Id0BVoK/d2hIUjUaBS4pDi4suY+LKOzWeiC+9PrI/JDAqAJCm3q3uPtlm3ha/u7Xz2NulUdcDlHiKX6aCB4x1qnClJw9v9VkiNQENeA1smLelicNClHx1xBVCdTWIY6Fagu4R1oDNgDJRrmK7V86Lges5ga6dHaXv4POf0UJ6t0mABAy9fGqmq1FDp9uAM1b4sCPZLr056VB6Hc/MvRcAYSgLZUcUSl7NLXXlY0szOhoo+3+jJQ1HLz9asTPhhaZJ3cQLDxhd3x2Fn/viwwiM1LR+4a6wbKJxEhQMjvJUue4XypVyZQ/DXecVByrP1jwOU3kmVCxk2xarSPaig0Oo5LTrIaikcoYvKfh35lnkU9vDY+jCknATz8JLsKH9+sW80VT82JHJvTO8VoI+q1n4QLLFa9dwodOglil3MUIAGKbd9aR7X7P+o7f9QYFTwDnXQpxlTT7SkSbvbZ92vcG6ZqsIsUT60EnGfUX13BoT7QKFtQwfwfS5ddIMYdDxGLs555TDiAMxzRHjYsblKWVrtS//em6D/a6fFQuBuN5i2OVy+OBeeo+sOI4sUMirmNmnsdg60Ge+9/nhvDAT3TFW/mFS05MvoM3sxJB2ApyWyCpXqZV9VC60HJpAEfiy+/Xgm5WFpZKxwoJlDWrUYI9ZIZ4WQPQIR/glQ9bRVQY4LSgdgwJfbFNAj/AtyG0Xvs38mn2ah3cl3QBqv4eVeIqLDSDarvKTzcSh4SGWV09yvyfkzDFtngkBsAegRtUF+VYi32jjpm/pRhvV3wjtTtjQ8yGeCW/OUSe1+djpomxraIyhhWDwLChXFx8PP7Duakpur2/gyJBUANFEEG3zBOEUKf5Gx9cQaqGuqr3R1ju2YEy6iuEKJcb7HOQaJ2G/Zf0HKRGo2xx0DR2SzSMKRyAvrUP0m0NhpP/F9KNhA8PbIkG8sNEVse/aOtmLSeZRFMPT9ZYlCnKFKUO98zg8MIlnvpuQT0ldJXn2tNNIQ3s5V5nDA1zhI26e+TSiQYyfEJEb+uNmsQ6TgswFogmhndxYywdbyQ/loHt4oj2UUHuOOVzWyjDBORYJo+1AB9khn5+jhrr70nV1JOie8=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content></entry><entry><title>百鸟朝凤</title><link href="http://shangfute.github.com/phoenix-song.html" rel="alternate"></link><published>2016-05-21T21:58:27+08:00</published><updated>2016-05-21T21:58:27+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-21:/phoenix-song.html</id><summary type="html">&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</summary><content type="html">&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</content><category term="movie"></category></entry><entry><title>蓝牙共享网络</title><link href="http://shangfute.github.com/bluetooth-network.html" rel="alternate"></link><published>2016-05-20T13:51:55+08:00</published><updated>2016-05-20T13:51:55+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-20:/bluetooth-network.html</id><summary type="html">&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</summary><content type="html">&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</content><category term="skill"></category><category term="bluetooth"></category></entry><entry><title></title><link href="http://shangfute.github.com/best-coder-ctf.html" rel="alternate"></link><published>2016-05-19T11:01:49+08:00</published><updated>2016-05-19T11:01:49+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-19:/best-coder-ctf.html</id><summary type="html">&lt;p&gt;之前耀哥问我要不要参加百度之星编程竞赛，其实有一点要参加的想法。但是一方面感觉自己水平太差，那不了什么名次；另一方面还想着时间不够，我其实更想参加CTF。&lt;/p&gt;
&lt;p&gt;其实现在各种竞赛这么多，还有Kaggle、天池什么的都很诱人。但是毕竟人的精力是有限的。我现在希望能够首先集中精力到CTF中。&lt;/p&gt;
&lt;p&gt;想到这里，发现其实我同样没有参加多少CTF，那么何谈精力有限呢。那么我很少参加编程竞赛和很少参加CTF的原因是否其实一样呢。&lt;/p&gt;
&lt;p&gt;那么做个实验吧，下周我要尝试参加所有能够参加的CTF。如果做到了，那么坚持参加CTF。如果没有做到说明，我不能参加竞赛另有原因。我应当尝试找出更深入的原因。&lt;/p&gt;
&lt;p&gt;captf.com&lt;/p&gt;</summary><content type="html">&lt;p&gt;之前耀哥问我要不要参加百度之星编程竞赛，其实有一点要参加的想法。但是一方面感觉自己水平太差，那不了什么名次；另一方面还想着时间不够，我其实更想参加CTF。&lt;/p&gt;
&lt;p&gt;其实现在各种竞赛这么多，还有Kaggle、天池什么的都很诱人。但是毕竟人的精力是有限的。我现在希望能够首先集中精力到CTF中。&lt;/p&gt;
&lt;p&gt;想到这里，发现其实我同样没有参加多少CTF，那么何谈精力有限呢。那么我很少参加编程竞赛和很少参加CTF的原因是否其实一样呢。&lt;/p&gt;
&lt;p&gt;那么做个实验吧，下周我要尝试参加所有能够参加的CTF。如果做到了，那么坚持参加CTF。如果没有做到说明，我不能参加竞赛另有原因。我应当尝试找出更深入的原因。&lt;/p&gt;
&lt;p&gt;captf.com&lt;/p&gt;</content><category term="game"></category><category term="learn"></category></entry><entry><title>互联网发展太快了，是时候给它加把锁了</title><link href="http://shangfute.github.com/internet-lock.html" rel="alternate"></link><published>2016-05-18T23:01:00+08:00</published><updated>2016-05-18T23:01:00+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-18:/internet-lock.html</id><summary type="html">&lt;p&gt;互联网现在真正的改变了人们的生活，其中一项就是我们的隐私。如果将公交卡和银行卡绑定，元数据的关联几乎就可以确定一个人去了那里，干了什么，进而重构出一个人完整的生活轨迹。有人认为在互联网时代，我们不需要隐私，一切都开诚布公。同样有人竭力去保护隐私，甚至拒绝使用智能手机。&lt;/p&gt;
&lt;p&gt;这让我想起《三体》：三体人之间通过意识交流，不会产生任何谎言。这看起来是不错的天赋，但是他们大概就没有隐私了吧。假设互联网的发展能够使得人类同样达到三体人的状态，所有人完全成为一个共同体，那么人的思想就会同质化。其实正是隐私——人们之间不同又保密的那部分——构造了我们多元的社会。在我们的社会中会存在冲突，但是这样的社会才是有活力的社会，有创造力的社会。&lt;/p&gt;
&lt;p&gt;但实际上隐私的概念又十分微妙。只要上网必然要向网络提供自己的信息，才能获得相应的服务。因此，现在的手机应用的授权管理让人难以理解。比如一个应用需要你授权它调用GPS，但是我不希望泄漏我的位置信息，所以我选不授权，应用退出。应用为什么不可以保持位置未知的情况下提供服务呢？另一方面，我告诉了应用我的位置，我希望它合理使用，不要再用作它途。但是数据已经上传到服务器上了，应用想怎么用，我就没法控制了。我希望即使数据离开我的计算机，仍然只有授权的计算可以在我的数据上运行。&lt;/p&gt;
&lt;p&gt;其实现在已经有人实现了保密搜索功能：提供给搜索引擎的关键字是加密的，搜索引擎在不知道搜索内容的情况下，同样能够得到正确结果。这就很好的保护了用户的隐私 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;互联网现在真正的改变了人们的生活，其中一项就是我们的隐私。如果将公交卡和银行卡绑定，元数据的关联几乎就可以确定一个人去了那里，干了什么，进而重构出一个人完整的生活轨迹。有人认为在互联网时代，我们不需要隐私，一切都开诚布公。同样有人竭力去保护隐私，甚至拒绝使用智能手机。&lt;/p&gt;
&lt;p&gt;这让我想起《三体》：三体人之间通过意识交流，不会产生任何谎言。这看起来是不错的天赋，但是他们大概就没有隐私了吧。假设互联网的发展能够使得人类同样达到三体人的状态，所有人完全成为一个共同体，那么人的思想就会同质化。其实正是隐私——人们之间不同又保密的那部分——构造了我们多元的社会。在我们的社会中会存在冲突，但是这样的社会才是有活力的社会，有创造力的社会。&lt;/p&gt;
&lt;p&gt;但实际上隐私的概念又十分微妙。只要上网必然要向网络提供自己的信息，才能获得相应的服务。因此，现在的手机应用的授权管理让人难以理解。比如一个应用需要你授权它调用GPS，但是我不希望泄漏我的位置信息，所以我选不授权，应用退出。应用为什么不可以保持位置未知的情况下提供服务呢？另一方面，我告诉了应用我的位置，我希望它合理使用，不要再用作它途。但是数据已经上传到服务器上了，应用想怎么用，我就没法控制了。我希望即使数据离开我的计算机，仍然只有授权的计算可以在我的数据上运行。&lt;/p&gt;
&lt;p&gt;其实现在已经有人实现了保密搜索功能：提供给搜索引擎的关键字是加密的，搜索引擎在不知道搜索内容的情况下，同样能够得到正确结果。这就很好的保护了用户的隐私，因为我们都知道通过关键字几乎就可以知道你感兴趣的内容是什么。通常你搜索了某款汽车，就会不断向你推送汽车广告，因为搜索引擎记录了你的所有搜索行为。但我并不想让别人知道我想买车啊，那么就需要使用保密搜索。&lt;/p&gt;
&lt;p&gt;那么我们可以猜测随着人们保密意识的增强，类似的服务会越来越广泛的使用。就像现在的端到端加密一样，成为互联网的主流。虽然现在的技术条件还不够成熟，但是互联网发展太快了，是时候加把锁了。&lt;/p&gt;</content><category term="internet"></category><category term="privacy"></category></entry><entry><title>攻击者模型</title><link href="http://shangfute.github.com/rational-concept.html" rel="alternate"></link><published>2016-05-17T22:51:22+08:00</published><updated>2016-05-17T22:51:22+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-17:/rational-concept.html</id><summary type="html">&lt;p&gt;在安全协议中经典的攻击者模型有半诚实模型、恶意模型。半诚实的攻击者完全遵照游戏准则，但总是尝试打破既定的安全目标，就好像伪君子。恶意攻击者完全不管协议的规定，同样总是尝试打破既定的安全目标，就好像真小人。&lt;/p&gt;
&lt;p&gt;但实际中更可能的情况是攻击者是理性的人，会按照效益来决定是否打破规则。如果惩罚严厉的话，就不会选择打破规则。完全防御恶意攻击者十分困难，需要消耗很高的代价，但是如果防御理性攻击者，就不需要很高的代价了。这时候密码学就难以解决了，需要引入博弈论的方法。&lt;/p&gt;
&lt;p&gt;如果要提高效率的话，通常的情况是发现那些事情其实不是必须做的，只做必要的事情就好了。在安全计算协议中，混淆电路和不经意传输花费比较大。如果有些计算不需要保密的话，可以不进行混淆。将每条要执行的语句按照保密的程度进行分类，只对保密的计算使用混淆电路。同样如果数据有不经意访问性，也可以省略不经意传输的花销。这要比普通的方案有效得多。&lt;/p&gt;</summary><content type="html">&lt;p&gt;在安全协议中经典的攻击者模型有半诚实模型、恶意模型。半诚实的攻击者完全遵照游戏准则，但总是尝试打破既定的安全目标，就好像伪君子。恶意攻击者完全不管协议的规定，同样总是尝试打破既定的安全目标，就好像真小人。&lt;/p&gt;
&lt;p&gt;但实际中更可能的情况是攻击者是理性的人，会按照效益来决定是否打破规则。如果惩罚严厉的话，就不会选择打破规则。完全防御恶意攻击者十分困难，需要消耗很高的代价，但是如果防御理性攻击者，就不需要很高的代价了。这时候密码学就难以解决了，需要引入博弈论的方法。&lt;/p&gt;
&lt;p&gt;如果要提高效率的话，通常的情况是发现那些事情其实不是必须做的，只做必要的事情就好了。在安全计算协议中，混淆电路和不经意传输花费比较大。如果有些计算不需要保密的话，可以不进行混淆。将每条要执行的语句按照保密的程度进行分类，只对保密的计算使用混淆电路。同样如果数据有不经意访问性，也可以省略不经意传输的花销。这要比普通的方案有效得多。&lt;/p&gt;</content><category term="attack model"></category><category term="game theory"></category></entry><entry><title>非凡的推断</title><link href="http://shangfute.github.com/non-trivil-reduction.html" rel="alternate"></link><published>2016-05-16T23:05:31+08:00</published><updated>2016-05-16T23:05:31+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-16:/non-trivil-reduction.html</id><summary type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</summary><content type="html">&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</content><category term="chess"></category><category term="character"></category></entry><entry><title>形式化协议分析方法</title><link href="http://shangfute.github.com/protocol-analysis.html" rel="alternate"></link><published>2016-05-15T15:37:57+08:00</published><updated>2016-05-15T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-15:/protocol-analysis.html</id><summary type="html">&lt;p&gt;今天从CS259学习到一个关于协议分析的学习方法，我取名叫演变法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到一个安全协议的描述文档，例如RFC。&lt;/li&gt;
&lt;li&gt;根据描述，忽略一些协议细节，抽取协议的基本构造。&lt;/li&gt;
&lt;li&gt;将构造形式化。&lt;/li&gt;
&lt;li&gt;分析形式化协议，发现协议漏洞。&lt;/li&gt;
&lt;li&gt;对比描述文档，分析完整协议如何解决该漏洞的。&lt;/li&gt;
&lt;li&gt;打补丁后，重复第3步。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如此从原始构造，演变到最后版本的协议，能够深刻理解协议中的细节描述，分别都是为了解决什么问题的。&lt;/p&gt;
&lt;p&gt;这个方法同样适用于软件的安全性分析。&lt;/p&gt;</summary><content type="html">&lt;p&gt;今天从CS259学习到一个关于协议分析的学习方法，我取名叫演变法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到一个安全协议的描述文档，例如RFC。&lt;/li&gt;
&lt;li&gt;根据描述，忽略一些协议细节，抽取协议的基本构造。&lt;/li&gt;
&lt;li&gt;将构造形式化。&lt;/li&gt;
&lt;li&gt;分析形式化协议，发现协议漏洞。&lt;/li&gt;
&lt;li&gt;对比描述文档，分析完整协议如何解决该漏洞的。&lt;/li&gt;
&lt;li&gt;打补丁后，重复第3步。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如此从原始构造，演变到最后版本的协议，能够深刻理解协议中的细节描述，分别都是为了解决什么问题的。&lt;/p&gt;
&lt;p&gt;这个方法同样适用于软件的安全性分析。&lt;/p&gt;</content><category term="formal method"></category><category term="protocol analysis"></category><category term="learn"></category></entry><entry><title>英语学习</title><link href="http://shangfute.github.com/learn-english.html" rel="alternate"></link><published>2016-05-14T15:37:57+08:00</published><updated>2016-05-14T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-14:/learn-english.html</id><summary type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</summary><content type="html">&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</content><category term="english"></category><category term="daily"></category><category term="learn"></category></entry><entry><title>Have Fun With Cryptography</title><link href="http://shangfute.github.com/practice-encrypt.html" rel="alternate"></link><published>2016-05-13T22:11:03+08:00</published><updated>2016-05-13T22:11:03+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-13:/practice-encrypt.html</id><summary type="html">&lt;p&gt;今天刚刚在 github 上创建了主页，一共才三篇文章，就有一篇是加密的，遭到朋友们的抱怨。其实文章仅仅是一些没有整理好的思想罢了，但是为了测试一下加密功能，因此才加密了一下。另外，这个网站的主题就是密码学，因此我十分乐意让这个主题更突出一些。&lt;/p&gt;
&lt;p&gt;密码学太有用了，我不想只从理论研究的角度学习密码学，更想将其应用到实践中去。我希望能够实现下面的应用。&lt;/p&gt;
&lt;h2&gt;安全的评论&lt;/h2&gt;
&lt;p&gt;相信本文读者都在使用各种各样的网络应用，这些网络应用大多存在于云服务器上，客户端通常就是一个浏览器。大公司还可以构建自己的云，但许多小型组织和个人还是在租用公有云，因此数据存储在别人的计算机上。比如，大家使用淘宝时，交易记录都是存储在淘宝服务器上的，你可以查找之前在淘宝上买过的所以东西。这样做有很多好处，但同样难以保证这些数据的完整性，不被恶意修改。另一方面，难以保证这些数据不被用作它途，被恶意数据挖掘等等。&lt;/p&gt;
&lt;p&gt;比如文章评论功能可以自己实现，也可以将该项工作外包给别人。本站点的评论功能使用了多说的社会化评论服务，评论的数据以明文的形式存储在多说的服务器上。每次访问网站时，浏览器向多说的服务器发送请求，获得评论。因此难以确保这些外包的数据有没有被修改。这时候评论数据不需要保密，但是应当保证不被修改。&lt;/p&gt;
&lt;p&gt;一项工作有多少实际价值，就看它能帮助什么人，解决什么问题。帮助的人越多，解决的问题越普遍，越重要，价值越大 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;今天刚刚在 github 上创建了主页，一共才三篇文章，就有一篇是加密的，遭到朋友们的抱怨。其实文章仅仅是一些没有整理好的思想罢了，但是为了测试一下加密功能，因此才加密了一下。另外，这个网站的主题就是密码学，因此我十分乐意让这个主题更突出一些。&lt;/p&gt;
&lt;p&gt;密码学太有用了，我不想只从理论研究的角度学习密码学，更想将其应用到实践中去。我希望能够实现下面的应用。&lt;/p&gt;
&lt;h2&gt;安全的评论&lt;/h2&gt;
&lt;p&gt;相信本文读者都在使用各种各样的网络应用，这些网络应用大多存在于云服务器上，客户端通常就是一个浏览器。大公司还可以构建自己的云，但许多小型组织和个人还是在租用公有云，因此数据存储在别人的计算机上。比如，大家使用淘宝时，交易记录都是存储在淘宝服务器上的，你可以查找之前在淘宝上买过的所以东西。这样做有很多好处，但同样难以保证这些数据的完整性，不被恶意修改。另一方面，难以保证这些数据不被用作它途，被恶意数据挖掘等等。&lt;/p&gt;
&lt;p&gt;比如文章评论功能可以自己实现，也可以将该项工作外包给别人。本站点的评论功能使用了多说的社会化评论服务，评论的数据以明文的形式存储在多说的服务器上。每次访问网站时，浏览器向多说的服务器发送请求，获得评论。因此难以确保这些外包的数据有没有被修改。这时候评论数据不需要保密，但是应当保证不被修改。&lt;/p&gt;
&lt;p&gt;一项工作有多少实际价值，就看它能帮助什么人，解决什么问题。帮助的人越多，解决的问题越普遍，越重要，价值越大。这个问题可以推广为如何保证外包数据的完整性。做为一个密码学狗，马上想到构造恰当的密码学协议来解决这个问题。当然可能还有其他解决方法，不要将自己局限与特定领域，应当使用所有可能知识来解决。比如，我可以和多说签订合同，如果对方违约没有保护好数据，就应当赔我多少钱。但对我来说，这种方法显然有些困难。最后我会选取能够想到的最简单的方法来解决这个问题。&lt;/p&gt;
&lt;p&gt;密码学从根本上讲，或许就是一种通过数学方法来解决信任问题的学问。密码学想要将对某个人或组织的信任，等价为对某种数学问题的难解性的信任。如果你相信数学，那么你也应当相信大家可以共同完成某个任务。&lt;/p&gt;</content><category term="web"></category><category term="crypto"></category><category term="cloud"></category></entry><entry><title>[Encrypted] 考博之后的思考</title><link href="http://shangfute.github.com/after-submission.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><updated>2016-05-12T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:/after-submission.html</id><summary type="html">This content is encrypted.</summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;KK4ECpheGxC7IjAKgo40nQ==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content><category term="thoughts"></category></entry><entry><title>[Encrypted] Think Flow</title><link href="http://shangfute.github.com/think-flow.html" rel="alternate"></link><published>2016-05-12T15:37:57+08:00</published><updated>2016-05-12T15:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:/think-flow.html</id><summary type="html">This content is encrypted.</summary><content type="html">&lt;div id="pec-encrypted-content" style="display:none"&gt;1a86YcETu8mXCxsi1/OiBQ==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</content><category term="thoughts"></category></entry><entry><title>第一篇文章</title><link href="http://shangfute.github.com/di-yi-pian-wen-zhang.html" rel="alternate"></link><published>2016-05-12T13:37:57+08:00</published><updated>2016-05-12T13:37:57+08:00</updated><author><name>尚福特</name></author><id>tag:shangfute.github.com,2016-05-12:/di-yi-pian-wen-zhang.html</id><summary type="html">&lt;h2&gt;记录博客搭建过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pelican安装&lt;/li&gt;
&lt;li&gt;github pages&lt;/li&gt;
&lt;li&gt;pelican 插件&lt;/li&gt;
&lt;li&gt;select themes&lt;ul&gt;
&lt;li&gt;bootstrap2-dark&lt;/li&gt;
&lt;li&gt;aboutwilson&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加评论功能 Duoshuo&lt;/li&gt;
&lt;li&gt;站点图 sitemap&lt;/li&gt;
&lt;li&gt;RSS订阅&lt;/li&gt;
&lt;li&gt;文章加密&lt;/li&gt;
&lt;li&gt;日常写作流程&lt;/li&gt;
&lt;li&gt;图床&lt;/li&gt;
&lt;li&gt;代码高亮显示&lt;/li&gt;
&lt;li&gt;公式 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelican_plugins&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;尚福特&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;u …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;记录博客搭建过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pelican安装&lt;/li&gt;
&lt;li&gt;github pages&lt;/li&gt;
&lt;li&gt;pelican 插件&lt;/li&gt;
&lt;li&gt;select themes&lt;ul&gt;
&lt;li&gt;bootstrap2-dark&lt;/li&gt;
&lt;li&gt;aboutwilson&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加评论功能 Duoshuo&lt;/li&gt;
&lt;li&gt;站点图 sitemap&lt;/li&gt;
&lt;li&gt;RSS订阅&lt;/li&gt;
&lt;li&gt;文章加密&lt;/li&gt;
&lt;li&gt;日常写作流程&lt;/li&gt;
&lt;li&gt;图床&lt;/li&gt;
&lt;li&gt;代码高亮显示&lt;/li&gt;
&lt;li&gt;公式 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c1"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelican_plugins&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;尚福特&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;u&amp;quot;Shangfute&amp;#39;s Blog&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;Cryptography &amp;amp; Program Anaylsis&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://localhost:8000&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;u&amp;#39;zh-cmn-Hans&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/all.rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s1"&gt;.rss.xml&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Freebuf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;http://freebuf.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ltyleader&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://litengyao.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c1"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;shangfute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mailto://shangfute@163.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c1"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c1"&gt;# RELATIVE_URLS = True&lt;/span&gt;

&lt;span class="n"&gt;JINJA_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;jinja2.ext.ExprStmtExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/shangfute&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;priorities&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;changefreqs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;ENCRYPT_CONTENT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;title_prefix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;[Encrypted]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;summary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;This content is encrypted.&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;E:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;workspace&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;blog&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;pelican-themes&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s1"&gt;aboutwilson&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;# from pelican-plugins&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="math"&gt;\(Enc_k\)&lt;/span&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="write"></category><category term="think"></category></entry></feed>