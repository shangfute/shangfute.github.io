<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Shangfute's Blog</title><link>http://shangfute.github.com/</link><description>Cryptography &amp; Program Anaylsis</description><lastBuildDate>Thu, 12 May 2016 22:11:03 +0800</lastBuildDate><item><title>新增rss订阅功能</title><link>http://shangfute.github.com/create-rss.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Thu, 12 May 2016 22:11:03 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-12:create-rss.html</guid><category>web</category><category>rss</category><category>feed</category></item><item><title>第一篇文章</title><link>http://shangfute.github.com/di-yi-pian-wen-zhang.html</link><description>&lt;h2&gt;记录博客搭建过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pelican安装&lt;/li&gt;
&lt;li&gt;github pages&lt;/li&gt;
&lt;li&gt;pelican 插件&lt;/li&gt;
&lt;li&gt;select themes&lt;ul&gt;
&lt;li&gt;bootstrap2-dark&lt;/li&gt;
&lt;li&gt;aboutwilson&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加评论 Disqus&lt;/li&gt;
&lt;li&gt;站点图 sitemap&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;下一步改进&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;RSS&lt;/li&gt;
&lt;li&gt;加密&lt;/li&gt;
&lt;li&gt;日常写作流程&lt;/li&gt;
&lt;li&gt;图床&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Thu, 12 May 2016 13:37:57 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-12:di-yi-pian-wen-zhang.html</guid><category>write</category><category>think</category></item><item><title>[Encrypted] Think flow</title><link>http://shangfute.github.com/think-flow.html</link><description>&lt;div id="pec-encrypted-content" style="display:none"&gt;SMzL61fR9O/xm/AWoffeGA==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Wed, 06 Apr 2016 09:37:44 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-04-06:think-flow.html</guid><category>thought</category><category>daily</category></item></channel></rss>