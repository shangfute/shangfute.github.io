<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Shangfute's Blog</title><link>http://shangfute.github.com/</link><description>Cryptography &amp; Program Anaylsis</description><lastBuildDate>Tue, 17 May 2016 22:51:22 +0800</lastBuildDate><item><title>理性安全</title><link>http://shangfute.github.com/rational-conception.html</link><description>&lt;p&gt;在安全协议中经典的攻击者模型有半诚实模型、恶意模型。半诚实的攻击者完全遵照游戏准则，但是尝试打破既定的安全目标。恶意攻击者完全不管协议的规定，同样尝试打破既定的安全目标。&lt;/p&gt;
&lt;p&gt;但实际中更可能的情况是攻击者是理性的人，会按照效益来决定是否打破规则。如果惩罚严厉的话，就不会选择打破规则。完全防御恶意攻击者十分困难，需要消耗很高的代价，但是如果防御理性攻击者，就不需要很高的代价了。这时候密码学就难以解决了，需要引入博弈论的方法。&lt;/p&gt;
&lt;p&gt;如果要提高效率的话，通常的情况是发现那些事情其实不是必须做的，只做必要的事情就好了。在安全计算协议中，混淆电路和不经意传输花费比较大。如果有些计算不需要保密的话，可以不进行混淆。将每条要执行的语句按照保密的程度进行分类，只对保密的计算使用混淆电路。同样如果数据有不经意访问性，也可以省略不经意传输的花销。这要比普通的方案有效得多。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Tue, 17 May 2016 22:51:22 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-17:rational-conception.html</guid><category>attack model</category><category>game theory</category></item><item><title>非凡的推断</title><link>http://shangfute.github.com/non-trivil-reduction.html</link><description>&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Mon, 16 May 2016 23:05:31 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-16:non-trivil-reduction.html</guid><category>chess</category><category>character</category></item><item><title>形式化协议分析方法</title><link>http://shangfute.github.com/protocol-analysis.html</link><description>&lt;p&gt;今天从CS259学习到一个关于协议分析的学习方法，我取名叫演变法。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到一个安全协议的描述文档，例如RFC。&lt;/li&gt;
&lt;li&gt;根据描述，忽略一些协议细节，抽取协议的基本构造。&lt;/li&gt;
&lt;li&gt;将构造形式化。&lt;/li&gt;
&lt;li&gt;分析形式化协议，发现协议漏洞。&lt;/li&gt;
&lt;li&gt;对比描述文档，分析完整协议如何解决该漏洞的。&lt;/li&gt;
&lt;li&gt;打补丁后，重复第3步。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如此从原始构造，演变到最后版本的协议，能够深刻理解协议中的细节描述，分别都是为了解决什么问题的。&lt;/p&gt;
&lt;p&gt;这个方法同样适用于软件的安全性分析。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Sun, 15 May 2016 15:37:57 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-15:protocol-analysis.html</guid><category>formal method</category><category>protocol analysis</category><category>learn</category></item><item><title>英语学习</title><link>http://shangfute.github.com/learn-english.html</link><description>&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Sat, 14 May 2016 15:37:57 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-14:learn-english.html</guid><category>english</category><category>daily</category><category>learn</category></item><item><title>Have Fun With Cryptography</title><link>http://shangfute.github.com/why-encrypt.html</link><description>&lt;p&gt;今天刚刚在 github 上创建了主页，一共才三篇文章，就有一篇是加密的，遭到朋友们的抱怨。其实文章仅仅是一些没有整理好的思想罢了，但是为了测试一下加密功能，因此才加密了一下。另外，这个网站的主题就是密码学，因此我十分乐意让这个主题更突出一些。&lt;/p&gt;
&lt;p&gt;密码学太有用了，我不想只从理论研究的角度学习密码学，更想将其应用到实践中去。我希望能够实现下面的应用。&lt;/p&gt;
&lt;h2&gt;安全的评论&lt;/h2&gt;
&lt;p&gt;相信本文读者都在使用各种各样的网络应用，这些网络应用大多存在于云服务器上，客户端通常就是一个浏览器。大公司还可以构建自己的云，但许多小型组织和个人还是在租用公有云，因此数据存储在别人的计算机上。比如，大家使用淘宝时，交易记录都是存储在淘宝服务器上的，你可以查找之前在淘宝上买过的所以东西。这样做有很多好处，但同样难以保证这些数据的完整性，不被恶意修改。另一方面，难以保证这些数据不被用作它途，被恶意数据挖掘等等。&lt;/p&gt;
&lt;p&gt;比如文章评论功能可以自己实现，也可以将该项工作外包给别人。本站点的评论功能使用了多说的社会化评论服务，评论的数据以明文的形式存储在多说的服务器上。每次访问网站时，浏览器向多说的服务器发送请求，获得评论。因此难以确保这些外包的数据有没有被修改。这时候评论数据不需要保密，但是应当保证不被修改。&lt;/p&gt;
&lt;p&gt;一项工作有多少实际价值，就看它能帮助什么人，解决什么问题。帮助的人越多，解决的问题越普遍，越重要，价值越大。这个问题可以推广为如何保证外包数据的完整性。做为一个密码学狗，马上想到构造恰当的密码学协议来解决这个问题。当然可能还有其他解决方法，不要将自己局限与特定领域，应当使用所有可能知识来解决。比如，我可以和多说签订合同，如果对方违约没有保护好数据，就应当赔我多少钱。但对我来说，这种方法显然有些困难。最后我会选取能够想到的最简单的方法来解决这个问题。&lt;/p&gt;
&lt;p&gt;密码学从根本上讲，或许就是一种通过数学方法来解决信任问题的学问。密码学想要将对某个人或组织的信任，等价为对某种数学问题的难解性的信任。如果你相信数学，那么你也应当相信大家可以共同完成某个任务。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Fri, 13 May 2016 22:11:03 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-13:why-encrypt.html</guid><category>web</category><category>crypto</category><category>cloud</category></item><item><title>[Encrypted] Think flow</title><link>http://shangfute.github.com/think-flow.html</link><description>&lt;div id="pec-encrypted-content" style="display:none"&gt;2xkgJAX2xFeMMu0Pbfxtvw==;jmtj6voSLkCcsWNAYfvfTML6SrHEZLQUz68xjwHnmo8vxFrThB3gnUsLigQ/UVmSg5BqPcjwVVy7kOblK6T5Wu4w82sUhCuJPQOKDG9N1GFO1Aw7Ja2GyIxbR/YkBqCxhKwUGIuyAqYj0wgHbq4741qYPDb+Hy8H3o5fEFJd2YV6+sgiS+pylUvXuoNyP0rJEIfjozz3SdxmjoC9dhwCVj4RL2odJkxXwIMey1LBS+44l5tX0GQdOgv2lW2GRJ7qzQT1RjRrA24XAo8y0n8O+sGnIMMfxMD7a1PIsIS490h2X7FMMn/FFCLlMg/GbxumUKLlK7zqAJ6POf2D/mhcWoDD0g3f5d6r3YOtrnNb+o51t/edfTL1qtyYEjJdp5tVdvtO8bQqWuC7sHPYKcFyG2XRBjsQIUDkoqOQWmI8HSQPPTFDE4DKP6zia1sYP+1n4XZbumi1Mcs3rn5mY6K5ZmG0cN2adHi3mualFViPg1TdgtWbZyqx9jeBiBMhysMkKIsOtArw35PrSqwGv7kC0QN/JdvBjZkblaG3AJaE/bg6NHXAm18p6m/u09O1yqOliyCSjLJmLtBi2z9jr/GVJ8DwZl97yCH/Fm11h/LOBFMO71LrsCaBpqscFXTZVVCCNP+akZIqLpOShnSZt3Ca51atVXHT4iyGBYkF5h3qZKpgHUrCBh+qMLHIQRbKVWil3FaZyzShXl22g0utbc1XQJpaC8PQAS+AexmuYPH34Jq9uc0CNnZ3GnSjoUPvwzzSWj1rjxjDxxJBvgdBP0GazU7hsGVqKIUJgugdtbQ3kv5X0TB+zV4eqoS3Epn5xknL1IxbJUWmoagrL2UCFRToETQA17yEDvYtYIKAL85V58PgD+PeH1H6l+Gej7806fDpM7Hjn3XQRL9GNs+d9rLf4x3QBc6y9vZHoOHTDLEGfb9/sD3ubKanCFIbLNjA7bwmDdh7yMS2kS0Z9x6vlIH/sWdMADgDyESg+FscRchMsB0eXbZ6hW2hlSitJqoo2gUEEFZ4vQmEo9pXlqzMRee/6Gp6wmICm5VGnBirNPgQ1KddRMHFOwgt0PlVB9QtZuzmAT9/7BUEZJCjJsXpEnFIpqhaHUKI1PIifhRzvrRJf/GXrRrKFJMPnQv76ocn082jx66BeYkbscUFfCdXrFXgYbSw3ho9qZxPsdHey9s5EHhGLOlnS5etRYyJtzLcHsQKWP7F6tzZ7p+yGk1Mk3d0cRLUDq2pYnO3S+OdVyuhYKEAs9z2zixjkSrs0XlmSJnjUCp05by59yanKuFtEyqds/7tV01eTDmF+4vvCYnjVz96cUy2ZF4OmD94p4WGMVjX6/YzVMhTIa/vVpe+GNfHW+GnbnUMqnmUpge4ItPSdUgE8A9qyitW5z/e53d4Xl0bP28lEQGbbdIczC9eIXIcWZ6hPAvYsfqgGYHGMrB5z/FZU5/okvgpAJ7pOLQV+sqbaPazJ0ifcedc5GXpVKXiSOIVUa9IovBmbK2fCGAPAaOPqzMHvQElsiUQp9H4ozCFZaC/1HHmVm66DkPem1HNIiZodApiS8sSmre/NWS2iN9lqYhfZ2WdUvJH/Iu3c8++qVWAOmw99psgkrph6ynjCyeeL3myhuEORnTvHNu3iWbqYuWngUeCHiDquJaqQmJLfJe4gxw4mtqjCj9RjdS/G38qw0kuys5kR878nVX9ZiOPj6oSiBPXKe35KD4srHU+A+E9+++68MRjEk/wNWlpiTka+nvLhGwvUv0Bmna1nfhFY073NvWeDE5q2G36lkm3svJ4WhZt93RoWB1Y3rXLgy6c9dWcLSkGoQI6um1poQQmspcJfOd8gWnQL1ocFb6yP80E6w04/QiU9hz24YI6KJS5J0hal0mXbw7QLPpk89O8YeWgb5MNs0QnE6mSGCl2tFXm3STy8aMW3qsJwUyC5qEcx8I1xGGAI1qvKunzd2c8grf8RErLmrXlLKdb3oyPLOh+sBoP6+MMuZiUYRS/ACHjNumE7ncwPdPqI8WAgL1aySR8BkRScH6NDGxFTm7V4Wk/EeO6rCUxK0/BSKQC3MF0ZhDp9JcMUIZw/9SJoM68doykxjd6o1ubeO2xRFq3sV1WRnQ76lmCAbO8/vA9NwH+dxd9QPexBmoDrC72dEGi7KWRj089X7n/QNigu+9JPvVk+yQTwEkSm8QMc7R+rh6wSGNl+d8VSdhpGdnqjsqUXV7zZa5NmZX6ppYGbOHUZ/Hk3+KELtMHscj0yLiUHupqHL6r55MXjouF7nJmPoqFJKVGX3xLYk4dQjyTlGlzQ9pkvoLiBRRI0nU823+pZn4Ig77lAeQe7VHRccR/UKrCuzPHXd0upLOPvwigfM9rbjSatX+1UZpgnpqhydbLnQ2nqnYfs1njrJKCD+iwM4UJKbDrAIDWt0v0XG1IOauF0n9kLqDIoWy0ip897wwwyOYgIFa5kH5njFwKft1CWzbypVUmoII45OcySTPw/FebQgHxSAPPyByXlwYfpWALnZHypRmJ44/IkBTqWA9NwIfX1WOUTN4Napj3IW8zWe7ceTwjH8Y5nZETzbCiQDLoOMuaxfkrea1z4xbhmWyA81s3oMmuSMBH6MnDGedihBchgTsokK7ph9fq2+cZZmnHzziWC4dM7jbKeYcaz4TnmTEYWYp2x/mtC0plt5MLDrueuQo9Lem/JcHMbHc/thhuWsX3S8meKf/Ft1vIav4viY3zNo8ZdPL3OaoZNu8TjzXrHY3vX3Zs45CqX9RSADHuE6x2VTGYUSrQFjvD/mFMSDMfdr0SS05q0LTBZqtLjkA46FDeaYiMY/aaU3TLojDqYp/n195tfLKtarxMPo7+2dcw57iQzT9IMqadmnjmy085sbGbq1I492thXyjoNbfyx/ALRDRuahnFtx43i34IoAESL7RCqnYEkt85Sz1e0fUoxMuA/l44nGrSp0kQXo/F+MVuKM9ak3Jcaj4LsVcT0c3a1YJNB4inIRSf5N7CiWHu/ELpoVC5U7gbazKAUqcirIm6W4Gdq0LavaJUwAPQeIjgqV1AbrIDptqS0D93Jm0ok+dkzH8h4y8kPloYQ4zgvNpamiVsrLgGYLeUmnIOwkAF4iwhQ3wtcX8On8fauenD8Gxywajcea5c9XB7op06s6gzq3di4DTDK5p9NaVp8lohTv1jLLkkPHi06qcEmIGk7pA+fOr1jQYxp1jKshg6tv5BK4lc5tFvnYzsHfV8apBbf/dHtYIxexNBFBiWRMFenkquJ7njeAg6t2iF830aywyw3WZCRbU8gy4Ys9DdjDKN7gKcEV6xY07VWu4G8RDh;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Thu, 12 May 2016 15:37:57 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-12:think-flow.html</guid><category>thoughts</category></item><item><title>第一篇文章</title><link>http://shangfute.github.com/di-yi-pian-wen-zhang.html</link><description>&lt;h2&gt;记录博客搭建过程&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;pelican安装&lt;/li&gt;
&lt;li&gt;github pages&lt;/li&gt;
&lt;li&gt;pelican 插件&lt;/li&gt;
&lt;li&gt;select themes&lt;ul&gt;
&lt;li&gt;bootstrap2-dark&lt;/li&gt;
&lt;li&gt;aboutwilson&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;添加评论功能 Duoshuo&lt;/li&gt;
&lt;li&gt;站点图 sitemap&lt;/li&gt;
&lt;li&gt;RSS订阅&lt;/li&gt;
&lt;li&gt;文章加密&lt;/li&gt;
&lt;li&gt;日常写作流程&lt;/li&gt;
&lt;li&gt;图床&lt;/li&gt;
&lt;li&gt;代码高亮显示&lt;/li&gt;
&lt;li&gt;公式 &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;测试：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class="c"&gt;# -*- coding: utf-8 -*- #&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;__future__&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;unicode_literals&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sys&lt;/span&gt;
&lt;span class="n"&gt;sys&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;getcwd&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;pelican_plugins&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;

&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;尚福特&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;quot;Shangfute&amp;#39;s Blog&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;SITESUBTITLE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;Cryptography &amp;amp; Program Anaylsis&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://localhost:8000&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;content&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;u&amp;#39;zh-cmn-Hans&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Feed generation is usually not desired when developing&lt;/span&gt;
&lt;span class="n"&gt;FEED_ALL_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/all.rss.xml&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_FEED_RSS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/&lt;/span&gt;&lt;span class="si"&gt;%s&lt;/span&gt;&lt;span class="s"&gt;.rss.xml&amp;#39;&lt;/span&gt;

&lt;span class="c"&gt;# Blogroll&lt;/span&gt;
&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;Freebuf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;http://freebuf.com/&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;ltyleader&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;http://litengyao.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="c"&gt;# Social widget&lt;/span&gt;
&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;shangfute&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;mailto://shangfute@163.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;

&lt;span class="c"&gt;# Uncomment following line if you want document-relative URLs when developing&lt;/span&gt;
&lt;span class="c"&gt;# RELATIVE_URLS = True&lt;/span&gt;

&lt;span class="n"&gt;JINJA_EXTENSIONS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;jinja2.ext.ExprStmtExtension&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,]&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;https://github.com/shangfute&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;SITEMAP&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xml&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;priorities&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.5&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;changefreqs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;indexes&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;daily&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;monthly&amp;#39;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;ENCRYPT_CONTENT&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;title_prefix&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;[Encrypted]&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="s"&gt;&amp;#39;summary&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;This content is encrypted.&amp;#39;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;E:&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;workspace&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;blog&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;pelican-themes&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s"&gt;aboutwilson&amp;#39;&lt;/span&gt;
&lt;span class="c"&gt;# from pelican-plugins&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;encrypt_content&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;render_math&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;span class="math"&gt;\(Enc_k\)&lt;/span&gt;&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Thu, 12 May 2016 13:37:57 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-12:di-yi-pian-wen-zhang.html</guid><category>write</category><category>think</category></item></channel></rss>