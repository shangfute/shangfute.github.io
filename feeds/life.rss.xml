<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Shangfute's Blog</title><link>http://shangfute.github.com/</link><description>Cryptography &amp; Program Anaylsis</description><lastBuildDate>Tue, 24 May 2016 22:57:17 +0800</lastBuildDate><item><title>我的时间管理方案</title><link>http://shangfute.github.com/time-managemnet.html</link><description>&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Tue, 24 May 2016 22:57:17 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-24:time-managemnet.html</guid><category>GTD</category><category>time</category></item><item><title>[Encrypted] Tangled Thoughts</title><link>http://shangfute.github.com/tangled-thoughts.html</link><description>&lt;div id="pec-encrypted-content" style="display:none"&gt;rIYPtDrutUKrGILnJqedmw==;guWQyz32DetS+oNm0GrdayeGtJ55lc/SmmP/aPV40+Hu3YuMeE5vLYokfC8kIAgh8MG7n/JkLsKW3uDeF/oTtuGPy6cCMUpsH8XtVOgvWLtm3ldpGmklfMpPZBxyi2v5XABWA9jeWQVwsDbDnHfDX/b2JiudDTsTy9Qmp4Ybkq/jEsBN9egRUNhEytoQxKBZVCTtl9CUOL0MDnqFpUfr0HOAk0UaSAPhMqXaUjmXTT/rvOdQAyQZ4U0SXF+ScqvW1e9wCxhaVcVmLvlNQOay0tW/fd94RR/o8QLRNYWTjN2XWMcP8Gognf6VbiA98GdfLqzZhclmbQL/BUJPqwLGRbIY3SzR+K8g3Xvjo/amfBmWDmVeTowASPYY/lxjMfNxZG0oOdakhYxlZEEd3WFLbf2t2d42mDTuRmSybWBQKdDly38Uf7ZmITIFqTPNDTWK9R69b4XuUtkiwGp31l3izOd/8DqRWwEkUHJo2cp4012qF9Wro9nYu4F6j6fQf9aNY2KgPwY03GnUvcLmvQKIaN52mPMRWgrZYMaGgpHqdT4rScQEOm9C/IkphEtBUw3fZbHsbtZJhBg3Ls3FRGfFim+iq4sWtZQ8sX3Q5mysvZfiaTHk5Qoy/FKBkvhzG8i8W21Ma1Kh4Z3SsT9ZPrNW8kOsmTDgR8tNQ3zE5IjaMLCE9jyGAkR1dGKLz2Ha+3qqWzn4MGfl2mJ0sdSU22mgbZWzSHvUuo9vP5gUXn8lPMN/QfpKjdifJZGKICIqk5dn++KyNsz+0oRaU3/Y58h09a4fv6QpxYFWB5cKauvZvj6ZGTflap3tTL0aX5/IHZL/8lr341P1xKmebQ0SbMsaiySdPMzWPgT7F0yFBwoOH/TcSjERT9xjHROHQTq14n/YpwkHeUrXSOVw90ZdIbcy26kteI+c2Ls3n36hef/a0qwkKc15nkW8M00PsbnUfkS3EpEEUjQwlDDqYgK3HIjS9UyL7mFbKKxVPm+gXqGfOR3xfTeXOwpVjXDEFMwJK332Y8Y+GkVBBCsFLPYYNjixnyn7vdXZzUyLZOowmmCh5oVbVHilC3QRFWTA7D9roiFqRVOhZWDVkFWcWlZykgRGeidy1VyPKucgMHnZelFscjUp9OfPTVzpp56CU/ApBRw4A1ZgXXXzWmrt3j6/voYvgMxFLYVKNH8/XFZFO/k4e+fwf3R16PRvauj/IES0u7adppkULD+EdqyXQYNpyp9mRnrHICOKeaAZFO24+Ix2xECpnndxyth9NMOthlegqJOVyr4TleN5aUNyQ+bPgnr60sm6VFCGRFco8fLjq31e0LtNzOgPWSVEWsVRpouJA8ZLD08Yi9f06GI7SgbFSngBjQ7CBBAfoGDIhrKx9xw8q3pTTtgYHHemd6lH3Zo4bVdmMB0N3DZWRyNHeKuY8NAewcM5+kS4dr96H7LUxb7Rz3k=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Sun, 22 May 2016 22:20:39 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-22:tangled-thoughts.html</guid></item><item><title>百鸟朝凤</title><link>http://shangfute.github.com/phoenix-song.html</link><description>&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Sat, 21 May 2016 21:58:27 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-21:phoenix-song.html</guid><category>movie</category></item><item><title>蓝牙共享网络</title><link>http://shangfute.github.com/bluetooth-network.html</link><description>&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Fri, 20 May 2016 13:51:55 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-20:bluetooth-network.html</guid><category>skill</category><category>bluetooth</category></item><item><title>非凡的推断</title><link>http://shangfute.github.com/non-trivil-reduction.html</link><description>&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Mon, 16 May 2016 23:05:31 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-16:non-trivil-reduction.html</guid><category>chess</category><category>character</category></item><item><title>英语学习</title><link>http://shangfute.github.com/learn-english.html</link><description>&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Sat, 14 May 2016 15:37:57 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-14:learn-english.html</guid><category>english</category><category>daily</category><category>learn</category></item><item><title>[Encrypted] Think Flow</title><link>http://shangfute.github.com/think-flow.html</link><description>&lt;div id="pec-encrypted-content" style="display:none"&gt;o+/rRlJLUSuQPp/50JtyrA==;n7xO9Dbul7BEkxBmbB8u9umqYGBl36/35bSAwfGyYU2+8l3c/FP+AZGBtg6LsDCj/Xq2nmsyNZqiLD98TdTWQn3SCeho0AbG+IYYBWJeJWU8nzDACGcLF6yhSSSQMKeiLcL8KoKGbR8N5D4mHXnMYKYzbGaxLEqJ8pDVplRnSwrJ1TT+I0uiond17mbBFtYikmD06GNoP4oEDjnn8AyJurcuBfV1LpsmT8nPO0cP8cktTBSIJ5r4RJrgNu/qDpJZMMvqD7Z6fTA3tQ7fi+topSlP0mf/Cdgo7S+wEnuCpzPHlK6NZX5yZoVXzeEJKUyIqzw/n+4k03z74Fgt7WGZSltlqvAOeudOHHuS2lbOlWB7D8YUMDn/6rLCzCBiwgtDnKr4rNC4wl+5nKyq9gDpgEllFOqap+IhKSZUe+hB9qIyl1uz4M5Cx8Xl7jVUkub6Vzug/1OXAJkhtK7o0nyW+fHsTx9pcODxL3yRIfNQjPKHqcmDCugGZGUI5d1FIfbwODQ3nUwVTq2BmXqpmUxdisKimKm8jPV3muXzjXWEEoGsaST5KzyFYu0JeY0K7o7J/EMjxPXxQ9QiVriNxGYUipRVZL7kXvG15ZykdMgvHMmo3mYLUwlto7uTNQMBCtTib6zCQOf9HRjilQhuzORM2rZaXwPlTAurbXnHSGb5QQFGl5lo871CAavfhdCS3EnPJARRQslsmFS/A1USxMWYPxoQrWsKbily/RZgelg/vZJXgt3f0tD96ksuQEwPBUrsQZx9FGUT2stoChzEqkZPXXxxXJI6PYk6meY+/bUKAYcJI7A9sRY42m3Xsg2My6ndyvM/IoYzzKDOVUmKtX/IltdLhGJQKYGLYVSMV5rLhF17Ige6Poky9Wf8cHJkhsZ4l6+POsisws5eIaQP7ilWbCTy0XUj98KdAza4c8UYA+/ITOiMgmHd/2lZcfVRxWHhVNZObYSnLLAQ8S1/ufQP388e3h7uM6pye2Y5aItNsO4VuAo7eRR1uJ79CF6144QvvhQxxNiTBxAp8fIxKQkrOn2++PA7iPFqIDs2MQWekBgiYshebg890Bue/BiyXc95MIw7SeAiVp8K0KJRJsHYm/PZv1Zyuo68z3kbDBrxraFMLe6ykEKpUlhp8ZSglkFVE1SNhz7Mak4j09K++uZgi/xZ0CGOws7lwLEWzHW8xqg0iRgCOJI+V2Kt3esQAMof4DRDrOcvH4QA2ofqy1NJFBEq95RLoeQdSxRJtXK3YiD92nFs1IYFsH/bVspPdiwbSnTWmZcz2E8Tfg0NB6caoT3/GpY01hHwqCiRW3haVAtCt2RcmkcITUgk1+rmW/Suu3JnYmNFJWllWRl69iG7jmAPyn1cP/jKhKuRxAm+pDUNxuzucrrH0wY1Jx1O7IyMnmV1sSTFHj2+9CEP9HM6YWpgXx9b7+Q2gt8rimWeoGYWYOtNDxkNTJhQdyzyLh4D0sQKzpTOsygZiPjvHShKob7pu7PODOA51pC2j5jXVLd6k5JJhDl3AJ7KHErr9jkaIrzw9EJIkfVra+L6em+IfTjxHVSksQ91bgXD1N7hZpZWqvmyKyMCMVa+It2LR/6nZyaOeFiG0B8GHE2P6E7QP/cOnDu91h6/Vjnr506YA+mRz0gzgwESnfOxmXFMonUqeghk+yBeyDFfYq+GW6GJuOW0qWo17BrGr30TzTsnHrZlIG/09rd24D+74Njh562f+73qUrJ2GP7o3af5STPIB7tPfeEpDAJcZx2i71kf5d9Zl/Db8P4M3UXVA0wT/+JlFTgDhCy77G/8j+OV84ITBsWtHf4GDNxmGBVReX+kiU0phWqsZxsNTKrme2QhumPyVCnemMzkjknOcK0ghnQNgrzNxW64rBlcorK7iQ9qWg362JGVujleCZBXG6ta6LGiU9QXleFvhTsfrbduBMWyEyBtzD6UKgUzAmmv2+BnjIIjYFvW69QEi1boNxvTqGg8oHTUTn+RPBECZnt2qz6qlxY+wELjY4GX2BNauyOXBgffbBRv97eGwwj8NCkRsUcsZbN1/IKV4z681ZWY3xvYsThYJQ0Mx3csvLflmBgR/6w+oPPjDysXzqrWSpWNG18KnLBbNChtWpWNEoND7B2LmxABYEKRCsQ/yLszqHljRwO5RQhqi/y46S9DWy3ymrFKNLT6gYKEUzIiT6GjNSAzZFqYqu+57sMZWYin8o8BtWILArAygWmsGLHhE42QPHYIIlfMG/nkW2iLS8YibJlPEg/ltGH5ryog6dLHZZWfFbn9i8G/uIe3s9SjmWb8KvSHh2Zt12l7BsryBx6lCiZCSHWcbfhmQlFlAV9j/MBOGJN1d5XeoKS8OEJ1EmDqdXD4DI91/B8NV+zdUGRzAQCvR6WtP3Y3EI2AT5ziGVne73qGwnbU69nZw5eAx4r+5bQaBe3ImmXo0p10MfewQr16b228Dg52NqImbxKLWqdh5VFZR97MvKmnFW7FsMuYabW7fbWRfGP0A+lD3ABUYaDnZbWgyj3YbjbRoUDP0yiguS7qoiwbGiqCmWsZ1ZaMLVLUwd7KOdg+cpUxY6x6B8NBLywU1nUmHC+ThP41zMLo0+496wllMl4ENFByJA3royOwg3iDAOeVgoTg+kQjZ9DDF5QvWm/txL7H4hd3NDUNWSTDIzLTarueqecI7K9G6RN17DfR5pMgXQYxhU4tMIIs+i5UoroDDvucQGGz/SscLuaMmwGTnY5eq3acnmpfc063ZPTkbpRkF07mzsVYWZcKC56W0QRW7vKQwXqyxu0aTwYunZoa3SLOpMzhXiaJrmynwwwtt0PNHZ/9HIK/11oOBU0Rtf3cVY+YS1IIIFrMumSXBCKbFdxmK3jSuY/RcDobMFUI/toPZxE94I4/4RK4DIHka41BxrZGbiCQXzYzJo29zwoLfw3ADx1dViarsPVvTXs5S+jXIslOhfiODEYwz4ZY8CwVU5U/wwTHemoaALkuu5M6EtwhZyJoCEBzTttPN23ZGD5kxCG/XHEgnwXmonmssR20t6csTkJrV1/cpTiQWxZy3cws+f6y9JElnjw1gVbxllAevN0SJKy0MGgiqvEwk1gagRYP7Ea3elI8f4L30RDb3cjwuCPDRwcTb3ZLEp85NudGF+FIF1IwVj5ve/znf4F/YBG3sPCKAYePYo/4gO2ZH20MUFbjaqI8ywvdingSZUkXSJokYXZchJX/Ho/zzw3pfTwHIY75o3PYY4w=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Thu, 12 May 2016 15:37:57 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-12:think-flow.html</guid><category>thoughts</category></item></channel></rss>