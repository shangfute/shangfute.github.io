<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>Shangfute's Blog</title><link>http://shangfute.github.com/</link><description>Cryptography &amp; Program Anaylsis</description><lastBuildDate>Tue, 24 May 2016 22:57:17 +0800</lastBuildDate><item><title>我的时间管理方案</title><link>http://shangfute.github.com/time-managemnet.html</link><description>&lt;p&gt;今天和显哥讨论他的备忘录应用的开发计划时，谈起了利用手机辅助管理自己的日常生活的话题。&lt;/p&gt;
&lt;p&gt;现在，时间管理的方案层出不穷，GTD、番茄时间管理方法、时间记录方法，各有各的优点。但是最适合自己的才是最好的。因此有人想开发自己的方案，比如显哥，有人组合使用现有的工具，比如我。&lt;/p&gt;
&lt;p&gt;其实我的时间超级空闲，没有忙到不可开交，但是经常出现拖延的情况。我必须保证自己时刻想着下一步方向。&lt;/p&gt;
&lt;p&gt;随时整理想法，记录到奇妙清单中。&lt;/p&gt;
&lt;p&gt;思考如何分解任务能够有效完成任务。&lt;/p&gt;
&lt;p&gt;然后将具体化的任务加入到TODO列表中。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Tue, 24 May 2016 22:57:17 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-24:time-managemnet.html</guid><category>GTD</category><category>time</category></item><item><title>[Encrypted] Tangled Thoughts</title><link>http://shangfute.github.com/tangled-thoughts.html</link><description>&lt;div id="pec-encrypted-content" style="display:none"&gt;oyz37OX7W/PBYanoHqGrhg==;i8hevscCz6jltbpPY8AN5QWjJi83Bej8nhv2EMxTHDo2LQJrtB0koldNb8zDizjFaE5Cmg1zr9zw/7ZnkOkXFdgN6d91Wjp1rmO5SoV2SIAJBQ+LjgFNeJk4a8RkLPW/hEc4zrXXABBUViLAmLqyIeJIy66cEGINIJsofYgUsl3d+7TZpou5KHNBLpQTIRqquENcwWAUkD/GrP7Kddh3heS4IGFyBl0SgrNnT+dPbbdAbVEKcZZ1+iJNfRQ0TDBqBnTAot+A6HxFwIBrb5pQzTi7yePyVaP4HIBdEirovnaxDzxmqlyVx1dvII/kobBOHYFEtA1A+5l/sdgzXAAMfQVcSpiO8w0cSpfOKWyP6cYkMY7XRx8m0kRnlSLN95lrrFuq0Ry2zyJy94xeG/q61PNvShQTYEstxDCrzrKpB/D3XAt9HmZ3jHlNBFupe3XjeOV/52B4Y07NPEyCT2mT5bfyyyrjICcMjfSD8SusNCxQ/anrtKrhcR2keww6w/KNsNCGs0pjgq1oQlKSAhxtNu4C0i5TAGXVxfkhiWy4L89X1v3knnKM/25ZH3ew+HLlI1ltKfaCSHHBV8Ks2R4nJHYXTLfQQPs1TnGvXg+NP18ViC/0piGFZWnYsvWDzALv/wPbLpOknE42v2hwch137SazW8oIhtpZ/0wauej7cWd4k2bNaiXGA9USjL3CMx8agMMS5y/BPtMUqTjK2MiPqy82kdmnBkyM93gYuxSxEVnAs3rh9LrpWFup+P7OTCYBtbIsl/LLgJkP2G2MVLAwgtxAyShja8qw7+sJv0Fhligm9YJNiNp07CjxiIAPctbak7z2E12xO0ALM+Cu+CR7R2DmhlYEDQRmnES5UrS6Wr6S/hkrRrNGiHfzilJcG/p7a1JSkdRwHwqTGfSkckWJhECCFSeJxqfgdoBYabfrQ2E7jsUfuft5pGoMDApLo2ZJMOzPwt3FrTk1UfbhpH86VU0SQJk7StCpbB8LubXiqF3a25kTYrPP9NW+Dq+eqIuEFEhGZszGoA5iGrZVcZ2LRn+qAvWHrueuPrcQb/6Lfhkew3JR40wsbScujh3+VVr/VpnfngRS/GN0LZMm119PWZp3xrSiCHzqaxzsQ42fyAYgd6JBvBURyl9SVG0iEOweElMbi5JldeS1aEBYbDnoGzHTGD6WwSu3+YbgDOt8Hft1wmVnxyWhgFKEydi7RCGbXQN8h2f7P3I2qq4ioLSxlxcrtMdyqtbnaZYE5018Ws1doUH8yfmqZmHvE6oCKToVh1mS8ocOSD06gbMzygamsQDYUnb0HEOlnzpfRmKCnlj9JQjDY1Z0d8jATemKsFvxJqdC2DlUxROdTnq/I/ZGggo71yL1jkNdPNCZKmk0VL4ZRkabiKDB7FmrvuM13Eo6bkBz4qQUlW/XIFsJwuTWNxk92uIUoqoaOGMPwCQYhVk=;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Sun, 22 May 2016 22:20:39 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-22:tangled-thoughts.html</guid></item><item><title>百鸟朝凤</title><link>http://shangfute.github.com/phoenix-song.html</link><description>&lt;p&gt;听耀哥说《百鸟朝凤》不错，今天看了之后很多感想。电影反映了唢呐艺术的衰落和唢呐匠的抗争。在电影中，百鸟朝凤是一首唢呐曲名，只有德高望重的人的丧礼上才能演奏，代表了最高等级的哀荣。主人公最后在师傅的墓前吹了这支曲子，让人不由感慨传统艺术就像师傅一样渐渐离我们远去。&lt;/p&gt;
&lt;p&gt;凤凰不论是在东方还是在西方，总是让人与浴火重生联系起来。我们不禁想探索一下唢呐这样的传统艺术能否重新焕发生机。人们都说曲高和寡，本来唢呐就不算什么高雅的艺术，而大都吹一些人民群众喜闻乐见的小曲儿。但为什么如今竞争不过现在的流行音乐呢？我不知道，毕竟咱既不是搞音乐的，也不懂唢呐。&lt;/p&gt;
&lt;p&gt;但类比一下其他的领域，我们会发现许多问题。比如现在很多岗位正在被计算机、机器人取代。它们大都是一些重复性高、缺乏技术含量的岗位。而唢呐作为有很高复杂度、难以被取代的工作都面临消亡的风险。那么我们现在的工作会不会同样面临这样的一天呢？难以想象十年后，我们失去工作，又难以学习新的技能时，将如何继续生存。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Sat, 21 May 2016 21:58:27 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-21:phoenix-song.html</guid><category>movie</category></item><item><title>蓝牙共享网络</title><link>http://shangfute.github.com/bluetooth-network.html</link><description>&lt;p&gt;我们一般通过手机让电脑上网的方式都是通过在手机上建立Wi-Fi热点的方式进行，今天学习了另一种方式，通过蓝牙建立共享网络。&lt;/p&gt;
&lt;p&gt;设置很简单，手机和电脑配对后，手机上建立蓝牙共享网络，电脑上加入蓝牙网络即可。&lt;/p&gt;
&lt;p&gt;这样不需要建热点也能上网了。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Fri, 20 May 2016 13:51:55 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-20:bluetooth-network.html</guid><category>skill</category><category>bluetooth</category></item><item><title>非凡的推断</title><link>http://shangfute.github.com/non-trivil-reduction.html</link><description>&lt;p&gt;晚上，X哥与Y哥对弈象棋，Y哥再次败北。原因出于哪里呢？大概是Y哥为了保护小卒子而失了大局，之前也犯过同样的错误。但是X哥给出了一个非凡的判断：看来下棋真的能反映一个人的性格；Y哥总是为了保护小卒子而失棋，这反映了Y哥不丢弃任何人，哪怕他是无名小卒。&lt;/p&gt;
&lt;p&gt;X哥，请收下我的膝盖。&lt;/p&gt;
&lt;p&gt;首先，Y哥确实就是这样的人啊。&lt;/p&gt;
&lt;p&gt;其次，X哥完全在思考积极的方面。&lt;/p&gt;
&lt;p&gt;最后，X哥完美地解决了Y哥的尴尬。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Mon, 16 May 2016 23:05:31 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-16:non-trivil-reduction.html</guid><category>chess</category><category>character</category></item><item><title>英语学习</title><link>http://shangfute.github.com/learn-english.html</link><description>&lt;p&gt;任务：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过李夏师兄推荐的欧路词典积累两万单词量，简直太好用了。&lt;/li&gt;
&lt;li&gt;循序渐进地读完21本书。&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Sat, 14 May 2016 15:37:57 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-14:learn-english.html</guid><category>english</category><category>daily</category><category>learn</category></item><item><title>[Encrypted] Think Flow</title><link>http://shangfute.github.com/think-flow.html</link><description>&lt;div id="pec-encrypted-content" style="display:none"&gt;aK0RPUJwDu8irHqNWkRonw==;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;^&lt;/div&gt;
&lt;div id="pec-decrypted-content"&gt;
    &lt;h4&gt;&lt;i&gt;This content is encrypted.&lt;/i&gt;&lt;/h4&gt;
&lt;/div&gt;

&lt;form id="pec-decrypt-form"&gt;
    &lt;label for="pec-content-password"&gt;Password&lt;/label&gt;
    &lt;input type="password" id="pec-content-password" placeholder="Password" /&gt;
    &lt;button type="button" id="pec-decrypt-content"&gt;Decrypt&lt;/button&gt;
&lt;/form&gt;


    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/enc-base64.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/cipher-core.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/pad-nopadding.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/md5.js"&gt;&lt;/script&gt;

    &lt;script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.2/components/aes.js"&gt;&lt;/script&gt;


&lt;script type="text/javascript"&gt;
    (function () {
        var strip_padding = function (padded_content, padding_char) {
            /*
             * Strips the padding character from decrypted content.
             */
            for (var i = padded_content.length; i &gt; 0; i--) {
                if (padded_content[i-1] !== padding_char) {
                    return padded_content.slice(0, i);
                }
            }
        };

        var decrypt_content = function (password, iv_b64, ciphertext_b64, padding_char) {
            /*
             * Decrypts the content from the ciphertext bundle.
             */
            var key = CryptoJS.MD5(password),
                iv = CryptoJS.enc.Base64.parse(iv_b64),
                ciphertext = CryptoJS.enc.Base64.parse(ciphertext_b64),
                bundle = {
                    key: key,
                    iv: iv,
                    ciphertext: ciphertext
                };

            var plaintext = CryptoJS.AES.decrypt(bundle, key, {iv: iv, padding: CryptoJS.pad.NoPadding});

            try {
                return strip_padding(plaintext.toString(CryptoJS.enc.Utf8), padding_char);
            }
            catch (err) {
                // encoding failed; wrong password
                return false;
            }
        };

        var init_decryptor = function() {
            var decrypt_btn = document.getElementById('pec-decrypt-content'),
                password_input = document.getElementById('pec-content-password'),
                encrypted_content = document.getElementById('pec-encrypted-content'),
                decrypted_content = document.getElementById('pec-decrypted-content'),
                decrypt_form = document.getElementById('pec-decrypt-form');

            decrypt_btn.addEventListener('click', function () {
                // grab the ciphertext bundle
                var parts = encrypted_content.innerHTML.split(';');

                // decrypt it
                var content = decrypt_content(
                    password_input.value,
                    parts[0],
                    parts[1],
                    parts[2]
                );

                if (content) {
                    // success; display the decrypted content
                    decrypted_content.innerHTML = content;
                    decrypt_form.parentNode.removeChild(decrypt_form);
                    encrypted_content.parentNode.removeChild(encrypted_content);

                    // any post processing on the decrypted content should be done here
                }
                else {
                    // ¯\_(ツ)_/¯
                    password_input.value = '';
                }
            });
        };

        document.addEventListener('DOMContentLoaded', init_decryptor);
    })();
&lt;/script&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">尚福特</dc:creator><pubDate>Thu, 12 May 2016 15:37:57 +0800</pubDate><guid isPermaLink="false">tag:shangfute.github.com,2016-05-12:think-flow.html</guid><category>thoughts</category></item></channel></rss>